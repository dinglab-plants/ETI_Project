line_treatment_order = order(factor(stats_table$Line_treatment))
stats_table_1 = stats_table[line_treatment_order,]
stats_table_pooled = stats_table_1
print(LSD_result)
# Pooled plots
test = ggplot_build(helper_pooled_bar)
helper_pooled2 = helper_pooled_bar+
geom_text(data = tibble(test = 1:12), x = sort(test[["data"]][[1]][["x"]]), y = test[["data"]][[2]][["ymax"]][order(test[["data"]][[1]][["x"]])] + 0.05, label = stats_table_pooled$sig_letters, size = 3, color = "black", inherit.aes = FALSE)
print(helper_pooled2)
png(file="helper_fresh_weight_normalized.png",
width=1182, height=829, res = 120)
helper_pooled2
dev.off()
ggsave("helper_fresh_weight_normalized_legend.pdf", units = "in", width = 4,
height = 3.25)
dlab_theme = theme(axis.title.y = element_text(margin = margin(r = 10)), text = element_text(size=12), axis.text = element_text(size=12),
axis.text.x = element_text(margin = margin(t = 5), size = 12, face = "italic", colour = "black", angle = 20, hjust=1),
axis.text.y = element_text(color = "black"),
axis.line = element_blank(),
axis.ticks = element_line(size = 1),
axis.title.x = element_blank(),
legend.position="none",
legend.text= element_text(size = 12),
#legend.title = element_text(size = 16, face = "bold"),
panel.background = element_blank(),
panel.spacing.x = unit(1, "lines"),
panel.spacing.y=unit(0,"lines"),
panel.grid =  element_blank(),
legend.title = element_blank(),
#panel.grid.major.y =  element_line(colour = "#999999"),
panel.grid.minor.y =  element_blank(),
panel.border = element_rect(fill = NA, color = "black", linewidth = 1),
strip.background =element_rect(fill="white"),
strip.text.x = element_text(size = 12, hjust = 0.5))
fresh_weight2$Line[fresh_weight2$Line == "Col"] = "Col-0"
helper_pooled_bar <- ggplot(data = fresh_weight3, aes(x = Line_mean, y = Fresh_weight_ratio_mean)) +
geom_bar(aes(color = Treatment), fill = "white", stat = "identity", position=position_dodge()) +
geom_errorbar(aes(x = Line_mean, ymax=Fresh_weight_ratio_mean + Fresh_weight_ratio_sd, ymin = Fresh_weight_ratio_mean - Fresh_weight_ratio_sd, color = Treatment), position = position_dodge(0.9),
size = 0.25, width = 0.25) +
geom_jitter(fresh_weight2, mapping = aes(x = Line, y = Ratio, shape = Batch, fill = Treatment, group = Treatment), position= position_jitterdodge(dodge.width = 0.9), alpha = 0.5, color = "grey") +
scale_color_manual(values = c("#F93D3D", "#0072B2"),
name = "Treatment", labels = c("Mock", "ETI"))  +
scale_shape_manual(values = unique(fresh_weight2$shapes)) +
labs(y = "Normalized fresh weight", x = "Line") +
dlab_theme +
scale_x_discrete(limits = c("SETI_wt", "SETI_eds1", "SETI_helperless", "SETI_adrs", "SETI_nrgs", "Col-0"), labels=c(expression("SETI wt"), expression("SETI" ~ italic("eds1")), expression("SETI" ~ italic("helperless")), expression("SETI" ~ italic("adr1s")),  expression("SETI" ~ italic("nrg1s")), expression("Col-0"))) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.6))
print(helper_pooled_bar)
# Pooled plots
test = ggplot_build(helper_pooled_bar)
helper_pooled2 = helper_pooled_bar+
geom_text(data = tibble(test = 1:12), x = sort(test[["data"]][[1]][["x"]]), y = test[["data"]][[2]][["ymax"]][order(test[["data"]][[1]][["x"]])] + 0.05, label = stats_table_pooled$sig_letters, size = 3, color = "black", inherit.aes = FALSE)
print(helper_pooled2)
png(file="helper_fresh_weight_normalized.png",
width=1182, height=829, res = 120)
helper_pooled2
dev.off()
ggsave("helper_fresh_weight_normalized_legend.pdf", units = "in", width = 4,
height = 3.25)
library("ggplot2")
library("tibble")
library("tidyr")
library("agricolae")
library("multcompView")
fresh_weight <- read.csv2(file = "./Data/Fresh_weight_lipase_like_ratio.csv", header = TRUE, dec = ",", sep = ";", fileEncoding="UTF-8-BOM")[,1:3]
fresh_weight$Fresh_weight<- as.numeric(as.character(fresh_weight$Fresh_weight))
fresh_weight = as_tibble(fresh_weight)
fresh_weight$Line = gsub("Col-0", "Col", fresh_weight$Line)
fresh_weight2 = separate(fresh_weight, Line, sep =  "-", into = c("Line", "Treatment"))
fresh_weight2$Treatment = replace_na(fresh_weight2$Treatment, "M")
fresh_weight2$shapes = rep(NA, length(fresh_weight2$Batch))
fresh_weight2$shapes[fresh_weight2$Batch == "batch1"] = 21
fresh_weight2$shapes[fresh_weight2$Batch == "batch2"] = 24
fresh_weight2$shapes[fresh_weight2$Batch == "batch3"] = 23
fresh_weight2$Treatment = factor(fresh_weight2$Treatment, levels = c("M", "E2"))
fresh_weight2$Fresh_weight = fresh_weight2$Fresh_weight
fresh_weight <- read.csv2(file = "./Data/Fresh_weight_lipase_like_ratio.csv", header = TRUE, dec = ",", sep = ";", fileEncoding="UTF-8-BOM")[,1:4]
fresh_weight$Fresh_weight<- as.numeric(as.character(fresh_weight$Fresh_weight))
fresh_weight = as_tibble(fresh_weight)
fresh_weight$Line = gsub("Col-0", "Col", fresh_weight$Line)
fresh_weight2 = separate(fresh_weight, Line, sep =  "-", into = c("Line", "Treatment"))
fresh_weight2$Treatment = replace_na(fresh_weight2$Treatment, "M")
#fresh_weight$Line = factor(fresh_weight$Line, levels = unique(fresh_weight$Line))
fresh_weight2$shapes = rep(NA, length(fresh_weight2$Batch))
fresh_weight2$shapes[fresh_weight2$Batch == "batch1"] = 21
fresh_weight2$shapes[fresh_weight2$Batch == "batch2"] = 24
fresh_weight2$shapes[fresh_weight2$Batch == "batch3"] = 23
#fresh_weight2$shapes[fresh_weight2$Batch == "batch4"] = 22
fresh_weight2$Treatment = factor(fresh_weight2$Treatment, levels = c("M", "E2"))
fresh_weight2$Fresh_weight = fresh_weight2$Ratio
fresh_weight2$Line[fresh_weight2$Line == "Col"] = "Col-0"
fresh_weight3 <- na.omit(read.csv2(file = "./Data/Fresh_weight_lipase_like_ratio.csv", header = TRUE, dec = ",", sep = ";", fileEncoding="UTF-8-BOM")[,5:12])
fresh_weight3$Treatment = factor(fresh_weight3$Treatment, levels = c("Mock", "E2"))
dlab_theme = theme(axis.title.y = element_text(margin = margin(r = 10)), text = element_text(size=12), axis.text = element_text(size=12),
axis.text.x = element_text(margin = margin(t = 5), size = 12, face = "italic", colour = "black", angle = 20, hjust=1),
axis.text.y = element_text(color = "black"),
axis.line = element_blank(),
axis.ticks = element_line(size = 1),
axis.title.x = element_blank(),
legend.position="none",
legend.text= element_text(size = 12),
#legend.title = element_text(size = 16, face = "bold"),
panel.background = element_blank(),
panel.spacing.x = unit(1, "lines"),
panel.spacing.y=unit(0,"lines"),
panel.grid =  element_blank(),
legend.title = element_blank(),
#panel.grid.major.y =  element_line(colour = "#999999"),
panel.grid.minor.y =  element_blank(),
panel.border = element_rect(fill = NA, color = "black", linewidth = 1),
strip.background =element_rect(fill="white"),
strip.text.x = element_text(size = 12, hjust = 0.5))
lipase_pooled_bar <- ggplot(data = fresh_weight3, aes(x = Line_mean, y = Fresh_weight_ratio_mean)) +
geom_bar(aes(color = Treatment), fill = "white", stat = "identity", position=position_dodge()) +
geom_jitter(fresh_weight2, mapping = aes(x = Line, y = Ratio, shape = Batch, fill = Treatment, group = Treatment), position= position_jitterdodge(dodge.width = 0.9), alpha = 0.5, color = "grey") +
geom_errorbar(aes(x = Line_mean, ymax=Fresh_weight_ratio_mean + Fresh_weight_ratio_sd, ymin = Fresh_weight_ratio_mean - Fresh_weight_ratio_sd, color = Treatment), position = position_dodge(0.9),
size = 0.25, width = 0.25) +
scale_color_manual(values = c("#F93D3D", "#0072B2"),
name = "Treatment", labels = c("Mock", "Estradiol"))  +
scale_shape_manual(values = unique(fresh_weight2$shapes)) +
labs(y = "Normalized fresh weight", x = "Line") +
dlab_theme +
scale_x_discrete(limits = c("SETI_wt", "SETI_eds1", "SETI_ps", "SETI_pad4", "SETI_sag101", "Col-0"), labels=c(expression("SETI wt"), expression("SETI" ~ italic("eds1")), expression("SETI" ~ italic("pad4 sag101")), expression("SETI" ~ italic("pad4")), expression("SETI" ~ italic("sag101")), expression("Col-0"))) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.3))
plot(lipase_pooled_bar)
################### Fisherâ€™s least significant difference (LSD) test
stats_table = data.frame(Line_treatment = rep(NA, 12),
sig_letters = rep(NA, 12), Batch = rep(NA, 12))
activity_treatment = aov(Fresh_weight~ Line*Treatment + Batch, data = fresh_weight2)
print(summary(activity_treatment))
LSD_result <- LSD.test(activity_treatment, c("Treatment", "Line"), alpha = 0.05)
stats_table$Line_treatment = factor(row.names(LSD_result$groups), levels = c("M:SETI_wt", "E2:SETI_wt", "M:SETI_eds1",
"E2:SETI_eds1",
"M:SETI_ps", "E2:SETI_ps",
"M:SETI_pad4", "E2:SETI_pad4",
"M:SETI_sag101", "E2:SETI_sag101",
"M:Col", "E2:Col"))
stats_table$sig_letters = LSD_result$groups[[2]]
line_treatment_order = order(factor(stats_table$Line_treatment))
stats_table_1 = stats_table[line_treatment_order,]
stats_table_pooled = stats_table_1
print(LSD_result)
################### Statistics
# Pooled batch
stats_table = data.frame(Line_treatment = rep(NA, 12),
sig_letters = rep(NA, 12), Batch = rep(NA, 12))
activity_treatment = aov(fresh_weight2$Fresh_weight~factor(fresh_weight2$Line)*factor(fresh_weight2$Treatment) + factor(fresh_weight2$Batch))
summary(activity_treatment)
Tuckey <- TukeyHSD(activity_treatment)
stats = multcompLetters4(activity_treatment, Tuckey,  threshold = 0.1)
fresh_weight <- read.csv2(file = "./Data/Fresh_weight_lipase_like_ratio.csv", header = TRUE, dec = ",", sep = ";", fileEncoding="UTF-8-BOM")[,1:3]
fresh_weight$Fresh_weight<- as.numeric(as.character(fresh_weight$Fresh_weight))
fresh_weight = as_tibble(fresh_weight)
fresh_weight$Line = gsub("Col-0", "Col", fresh_weight$Line)
fresh_weight2 = separate(fresh_weight, Line, sep =  "-", into = c("Line", "Treatment"))
fresh_weight2$Treatment = replace_na(fresh_weight2$Treatment, "M")
fresh_weight2$shapes = rep(NA, length(fresh_weight2$Batch))
fresh_weight2$shapes[fresh_weight2$Batch == "batch1"] = 21
fresh_weight2$shapes[fresh_weight2$Batch == "batch2"] = 24
fresh_weight2$shapes[fresh_weight2$Batch == "batch3"] = 23
fresh_weight2$Treatment = factor(fresh_weight2$Treatment, levels = c("M", "E2"))
fresh_weight2$Fresh_weight = fresh_weight2$Fresh_weight
fresh_weight <- read.csv2(file = "./Data/Fresh_weight_lipase_like_ratio.csv", header = TRUE, dec = ",", sep = ";", fileEncoding="UTF-8-BOM")[,1:4]
fresh_weight$Fresh_weight<- as.numeric(as.character(fresh_weight$Fresh_weight))
fresh_weight = as_tibble(fresh_weight)
fresh_weight$Line = gsub("Col-0", "Col", fresh_weight$Line)
fresh_weight2 = separate(fresh_weight, Line, sep =  "-", into = c("Line", "Treatment"))
fresh_weight2$Treatment = replace_na(fresh_weight2$Treatment, "M")
#fresh_weight$Line = factor(fresh_weight$Line, levels = unique(fresh_weight$Line))
fresh_weight2$shapes = rep(NA, length(fresh_weight2$Batch))
fresh_weight2$shapes[fresh_weight2$Batch == "batch1"] = 21
fresh_weight2$shapes[fresh_weight2$Batch == "batch2"] = 24
fresh_weight2$shapes[fresh_weight2$Batch == "batch3"] = 23
#fresh_weight2$shapes[fresh_weight2$Batch == "batch4"] = 22
fresh_weight2$Treatment = factor(fresh_weight2$Treatment, levels = c("M", "E2"))
fresh_weight2$Fresh_weight = fresh_weight2$Ratio
fresh_weight2$Line[fresh_weight2$Line == "Col"] = "Col-0"
fresh_weight3 <- na.omit(read.csv2(file = "./Data/Fresh_weight_lipase_like_ratio.csv", header = TRUE, dec = ",", sep = ";", fileEncoding="UTF-8-BOM")[,5:12])
fresh_weight3$Treatment = factor(fresh_weight3$Treatment, levels = c("Mock", "E2"))
dlab_theme = theme(axis.title.y = element_text(margin = margin(r = 10)), text = element_text(size=12), axis.text = element_text(size=12),
axis.text.x = element_text(margin = margin(t = 5), size = 12, face = "italic", colour = "black", angle = 20, hjust=1),
axis.text.y = element_text(color = "black"),
axis.line = element_blank(),
axis.ticks = element_line(size = 1),
axis.title.x = element_blank(),
legend.position="none",
legend.text= element_text(size = 12),
#legend.title = element_text(size = 16, face = "bold"),
panel.background = element_blank(),
panel.spacing.x = unit(1, "lines"),
panel.spacing.y=unit(0,"lines"),
panel.grid =  element_blank(),
legend.title = element_blank(),
#panel.grid.major.y =  element_line(colour = "#999999"),
panel.grid.minor.y =  element_blank(),
panel.border = element_rect(fill = NA, color = "black", linewidth = 1),
strip.background =element_rect(fill="white"),
strip.text.x = element_text(size = 12, hjust = 0.5))
lipase_pooled_bar <- ggplot(data = fresh_weight3, aes(x = Line_mean, y = Fresh_weight_ratio_mean)) +
geom_bar(aes(color = Treatment), fill = "white", stat = "identity", position=position_dodge()) +
geom_jitter(fresh_weight2, mapping = aes(x = Line, y = Ratio, shape = Batch, fill = Treatment, group = Treatment), position= position_jitterdodge(dodge.width = 0.9), alpha = 0.5, color = "grey") +
geom_errorbar(aes(x = Line_mean, ymax=Fresh_weight_ratio_mean + Fresh_weight_ratio_sd, ymin = Fresh_weight_ratio_mean - Fresh_weight_ratio_sd, color = Treatment), position = position_dodge(0.9),
size = 0.25, width = 0.25) +
scale_color_manual(values = c("#F93D3D", "#0072B2"),
name = "Treatment", labels = c("Mock", "Estradiol"))  +
scale_shape_manual(values = unique(fresh_weight2$shapes)) +
labs(y = "Normalized fresh weight", x = "Line") +
dlab_theme +
scale_x_discrete(limits = c("SETI_wt", "SETI_eds1", "SETI_ps", "SETI_pad4", "SETI_sag101", "Col-0"), labels=c(expression("SETI wt"), expression("SETI" ~ italic("eds1")), expression("SETI" ~ italic("pad4 sag101")), expression("SETI" ~ italic("pad4")), expression("SETI" ~ italic("sag101")), expression("Col-0"))) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.3))
plot(lipase_pooled_bar)
################### Fisherâ€™s least significant difference (LSD) test
stats_table = data.frame(Line_treatment = rep(NA, 12),
sig_letters = rep(NA, 12), Batch = rep(NA, 12))
activity_treatment = aov(Fresh_weight~ Line*Treatment + Batch, data = fresh_weight2)
print(summary(activity_treatment))
LSD_result <- LSD.test(activity_treatment, c("Treatment", "Line"), alpha = 0.05)
stats_table$Line_treatment = factor(row.names(LSD_result$groups), levels = c("M:SETI_wt", "E2:SETI_wt", "M:SETI_eds1",
"E2:SETI_eds1",
"M:SETI_ps", "E2:SETI_ps",
"M:SETI_pad4", "E2:SETI_pad4",
"M:SETI_sag101", "E2:SETI_sag101",
"M:Col", "E2:Col"))
stats_table$sig_letters = LSD_result$groups[[2]]
line_treatment_order = order(factor(stats_table$Line_treatment))
stats_table_1 = stats_table[line_treatment_order,]
stats_table_pooled = stats_table_1
print(LSD_result)
################### Plotting
# Pooled plots
test = ggplot_build(lipase_pooled_bar)
lipase_pooled2 = lipase_pooled_bar  +
geom_text(data = tibble(test = 1:12), x = sort(test[["data"]][[1]][["x"]]), y = test[["data"]][[2]][["ymax"]][order(test[["data"]][[1]][["x"]])] + 0.05, label = stats_table_pooled$sig_letters, size = 3, color = "black", inherit.aes = FALSE)
print(lipase_pooled2)
dlab_theme = theme(axis.title.y = element_text(margin = margin(r = 10)), text = element_text(size=12), axis.text = element_text(size=12),
axis.text.x = element_text(margin = margin(t = 5), size = 12, face = "italic", colour = "black", angle = 20, hjust=1),
axis.text.y = element_text(color = "black"),
axis.line = element_blank(),
axis.ticks = element_line(size = 1),
axis.title.x = element_blank(),
legend.position="none",
legend.text= element_text(size = 12),
#legend.title = element_text(size = 16, face = "bold"),
panel.background = element_blank(),
panel.spacing.x = unit(1, "lines"),
panel.spacing.y=unit(0,"lines"),
panel.grid =  element_blank(),
legend.title = element_blank(),
#panel.grid.major.y =  element_line(colour = "#999999"),
panel.grid.minor.y =  element_blank(),
panel.border = element_rect(fill = NA, color = "black", linewidth = 1),
strip.background =element_rect(fill="white"),
strip.text.x = element_text(size = 12, hjust = 0.5))
lipase_pooled_bar <- ggplot(data = fresh_weight3, aes(x = Line_mean, y = Fresh_weight_ratio_mean)) +
geom_bar(aes(color = Treatment), fill = "white", stat = "identity", position=position_dodge()) +
geom_jitter(fresh_weight2, mapping = aes(x = Line, y = Ratio, shape = Batch, fill = Treatment, group = Treatment), position= position_jitterdodge(dodge.width = 0.9), alpha = 0.5, color = "grey") +
geom_errorbar(aes(x = Line_mean, ymax=Fresh_weight_ratio_mean + Fresh_weight_ratio_sd, ymin = Fresh_weight_ratio_mean - Fresh_weight_ratio_sd, color = Treatment), position = position_dodge(0.9),
size = 0.25, width = 0.25) +
scale_color_manual(values = c("#F93D3D", "#0072B2"),
name = "Treatment", labels = c("Mock", "Estradiol"))  +
scale_shape_manual(values = unique(fresh_weight2$shapes)) +
labs(y = "Normalized fresh weight", x = "Line") +
dlab_theme +
scale_x_discrete(limits = c("SETI_wt", "SETI_eds1", "SETI_ps", "SETI_pad4", "SETI_sag101", "Col-0"), labels=c(expression("SETI wt"), expression("SETI" ~ italic("eds1")), expression("SETI" ~ italic("pad4 sag101")), expression("SETI" ~ italic("pad4")), expression("SETI" ~ italic("sag101")), expression("Col-0"))) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.6))
plot(lipase_pooled_bar)
################### Plotting
# Pooled plots
test = ggplot_build(lipase_pooled_bar)
lipase_pooled2 = lipase_pooled_bar  +
geom_text(data = tibble(test = 1:12), x = sort(test[["data"]][[1]][["x"]]), y = test[["data"]][[2]][["ymax"]][order(test[["data"]][[1]][["x"]])] + 0.05, label = stats_table_pooled$sig_letters, size = 3, color = "black", inherit.aes = FALSE)
print(lipase_pooled2)
library("ggplot2")
library("tibble")
library("tidyr")
library("agricolae")
library("multcompView")
fresh_weight <- read.csv2(file = "./Data/Fresh_weight_lipase_like_ratio.csv", header = TRUE, dec = ",", sep = ";", fileEncoding="UTF-8-BOM")[,1:3]
fresh_weight$Fresh_weight<- as.numeric(as.character(fresh_weight$Fresh_weight))
fresh_weight = as_tibble(fresh_weight)
fresh_weight$Line = gsub("Col-0", "Col", fresh_weight$Line)
fresh_weight2 = separate(fresh_weight, Line, sep =  "-", into = c("Line", "Treatment"))
fresh_weight2$Treatment = replace_na(fresh_weight2$Treatment, "M")
fresh_weight2$shapes = rep(NA, length(fresh_weight2$Batch))
fresh_weight2$shapes[fresh_weight2$Batch == "batch1"] = 21
fresh_weight2$shapes[fresh_weight2$Batch == "batch2"] = 24
fresh_weight2$shapes[fresh_weight2$Batch == "batch3"] = 23
fresh_weight2$Treatment = factor(fresh_weight2$Treatment, levels = c("M", "E2"))
fresh_weight2$Fresh_weight = fresh_weight2$Fresh_weight
fresh_weight <- read.csv2(file = "./Data/Fresh_weight_lipase_like_ratio.csv", header = TRUE, dec = ",", sep = ";", fileEncoding="UTF-8-BOM")[,1:4]
fresh_weight$Fresh_weight<- as.numeric(as.character(fresh_weight$Fresh_weight))
fresh_weight = as_tibble(fresh_weight)
fresh_weight$Line = gsub("Col-0", "Col", fresh_weight$Line)
fresh_weight2 = separate(fresh_weight, Line, sep =  "-", into = c("Line", "Treatment"))
fresh_weight2$Treatment = replace_na(fresh_weight2$Treatment, "M")
#fresh_weight$Line = factor(fresh_weight$Line, levels = unique(fresh_weight$Line))
fresh_weight2$shapes = rep(NA, length(fresh_weight2$Batch))
fresh_weight2$shapes[fresh_weight2$Batch == "batch1"] = 21
fresh_weight2$shapes[fresh_weight2$Batch == "batch2"] = 24
fresh_weight2$shapes[fresh_weight2$Batch == "batch3"] = 23
#fresh_weight2$shapes[fresh_weight2$Batch == "batch4"] = 22
fresh_weight2$Treatment = factor(fresh_weight2$Treatment, levels = c("M", "E2"))
fresh_weight2$Fresh_weight = fresh_weight2$Ratio
fresh_weight2$Line[fresh_weight2$Line == "Col"] = "Col-0"
fresh_weight3 <- na.omit(read.csv2(file = "./Data/Fresh_weight_lipase_like_ratio.csv", header = TRUE, dec = ",", sep = ";", fileEncoding="UTF-8-BOM")[,5:12])
fresh_weight3$Treatment = factor(fresh_weight3$Treatment, levels = c("Mock", "E2"))
dlab_theme = theme(axis.title.y = element_text(margin = margin(r = 10)), text = element_text(size=12), axis.text = element_text(size=12),
axis.text.x = element_text(margin = margin(t = 5), size = 12, face = "italic", colour = "black", angle = 20, hjust=1),
axis.text.y = element_text(color = "black"),
axis.line = element_blank(),
axis.ticks = element_line(size = 1),
axis.title.x = element_blank(),
legend.position="none",
legend.text= element_text(size = 12),
#legend.title = element_text(size = 16, face = "bold"),
panel.background = element_blank(),
panel.spacing.x = unit(1, "lines"),
panel.spacing.y=unit(0,"lines"),
panel.grid =  element_blank(),
legend.title = element_blank(),
#panel.grid.major.y =  element_line(colour = "#999999"),
panel.grid.minor.y =  element_blank(),
panel.border = element_rect(fill = NA, color = "black", linewidth = 1),
strip.background =element_rect(fill="white"),
strip.text.x = element_text(size = 12, hjust = 0.5))
lipase_pooled_bar <- ggplot(data = fresh_weight3, aes(x = Line_mean, y = Fresh_weight_ratio_mean)) +
geom_bar(aes(color = Treatment), fill = "white", stat = "identity", position=position_dodge()) +
geom_jitter(fresh_weight2, mapping = aes(x = Line, y = Ratio, shape = Batch, fill = Treatment, group = Treatment), position= position_jitterdodge(dodge.width = 0.9), alpha = 0.5, color = "grey") +
geom_errorbar(aes(x = Line_mean, ymax=Fresh_weight_ratio_mean + Fresh_weight_ratio_sd, ymin = Fresh_weight_ratio_mean - Fresh_weight_ratio_sd, color = Treatment), position = position_dodge(0.9),
size = 0.25, width = 0.25) +
scale_color_manual(values = c("#F93D3D", "#0072B2"),
name = "Treatment", labels = c("Mock", "Estradiol"))  +
scale_shape_manual(values = unique(fresh_weight2$shapes)) +
labs(y = "Normalized fresh weight", x = "Line") +
dlab_theme +
scale_x_discrete(limits = c("SETI_wt", "SETI_eds1", "SETI_ps", "SETI_pad4", "SETI_sag101", "Col-0"), labels=c(expression("SETI wt"), expression("SETI" ~ italic("eds1")), expression("SETI" ~ italic("pad4 sag101")), expression("SETI" ~ italic("pad4")), expression("SETI" ~ italic("sag101")), expression("Col-0"))) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.6))
plot(lipase_pooled_bar)
################### Fisherâ€™s least significant difference (LSD) test
stats_table = data.frame(Line_treatment = rep(NA, 12),
sig_letters = rep(NA, 12), Batch = rep(NA, 12))
activity_treatment = aov(Fresh_weight~ Line*Treatment + Batch, data = fresh_weight2)
print(summary(activity_treatment))
LSD_result <- LSD.test(activity_treatment, c("Treatment", "Line"), alpha = 0.05)
stats_table$Line_treatment = factor(row.names(LSD_result$groups), levels = c("M:SETI_wt", "E2:SETI_wt", "M:SETI_eds1",
"E2:SETI_eds1",
"M:SETI_ps", "E2:SETI_ps",
"M:SETI_pad4", "E2:SETI_pad4",
"M:SETI_sag101", "E2:SETI_sag101",
"M:Col", "E2:Col"))
stats_table$sig_letters = LSD_result$groups[[2]]
line_treatment_order = order(factor(stats_table$Line_treatment))
stats_table_1 = stats_table[line_treatment_order,]
stats_table_pooled = stats_table_1
print(LSD_result)
################### Plotting
# Pooled plots
test = ggplot_build(lipase_pooled_bar)
lipase_pooled2 = lipase_pooled_bar  +
geom_text(data = tibble(test = 1:12), x = sort(test[["data"]][[1]][["x"]]), y = test[["data"]][[2]][["ymax"]][order(test[["data"]][[1]][["x"]])] + 0.05, label = stats_table_pooled$sig_letters, size = 3, color = "black", inherit.aes = FALSE)
print(lipase_pooled2)
View(test)
lipase_pooled_bar  +
geom_text(data = tibble(test = 1:12), x = sort(test[["data"]][[1]][["x"]]), y = test[["data"]][[1]][["ymax"]][order(test[["data"]][[1]][["x"]])] + 0.05, label = stats_table_pooled$sig_letters, size = 3, color = "black", inherit.aes = FALSE)
test[["data"]][[2]][["ymax"]]
################### Plotting
# Pooled plots
test = ggplot_build(lipase_pooled_bar)
lipase_pooled2 = lipase_pooled_bar  +
geom_text(data = tibble(test = 1:12), x = sort(test[["data"]][[1]][["x"]]), y = test[["data"]][[2]][["ymax"]][order(test[["data"]][[1]][["x"]])] + 0.05, label = stats_table_pooled$sig_letters, size = 3, color = "black", inherit.aes = FALSE)
print(lipase_pooled2)
test[["data"]][[1]][["x"]]
order(test[["data"]][[1]][["x"]])
order(test[["data"]][[1]][["x"]]
test[["data"]][[2]][["ymax"]]
order(test[["data"]][[1]][["x"]])
test[["data"]][[1]][["x"]]
test[["data"]][[2]][["ymax"]]
test[["data"]][[1]][["ymax"]]
################### Plotting
# Pooled plots
test = ggplot_build(lipase_pooled_bar)
lipase_pooled2 = lipase_pooled_bar  +
geom_text(data = tibble(test = 1:12), x = sort(test[["data"]][[1]][["x"]]), y = test[["data"]][[3]][["ymax"]][order(test[["data"]][[1]][["x"]])] + 0.05, label = stats_table_pooled$sig_letters, size = 3, color = "black", inherit.aes = FALSE)
print(lipase_pooled2)
png(file="lipase_fresh_weight_batches_batches_0_1.png",
width=1182, height=829, res = 120)
lipase_pooled2
dev.off()
ggsave("lipase_fresh_weight_batches.pdf", units = "in", width = 4,
height = 3.25)
library("ggplot2")
library("tibble")
library("tidyr")
library("agricolae")
library("multcompView")
fresh_weight <- read.csv2(file = "./Data/Fresh_weight_helper_ratio.csv", header = TRUE, dec = ",", sep = ";", fileEncoding="UTF-8-BOM")[,1:4]
fresh_weight$Fresh_weight<- as.numeric(as.character(fresh_weight$Fresh_weight))
fresh_weight = as_tibble(fresh_weight)
fresh_weight$Line = gsub("Col-0", "Col", fresh_weight$Line)
fresh_weight2 = separate(fresh_weight, Line, sep =  "-", into = c("Line", "Treatment"))
fresh_weight2$Treatment = replace_na(fresh_weight2$Treatment, "M")
#fresh_weight$Line = factor(fresh_weight$Line, levels = unique(fresh_weight$Line))
fresh_weight2$shapes = rep(NA, length(fresh_weight2$Batch))
fresh_weight2$shapes[fresh_weight2$Batch == "batch1"] = 21
fresh_weight2$shapes[fresh_weight2$Batch == "batch2"] = 24
fresh_weight2$shapes[fresh_weight2$Batch == "batch3"] = 23
fresh_weight2$shapes[fresh_weight2$Batch == "batch4"] = 22
fresh_weight2$Treatment = factor(fresh_weight2$Treatment, levels = c("M", "E2"))
fresh_weight2$Fresh_weight = fresh_weight2$Ratio
fresh_weight2$Line[fresh_weight2$Line == "Col"] = "Col-0"
fresh_weight3 <- na.omit(read.csv2(file = "./Data/Fresh_weight_helper_ratio.csv", header = TRUE, dec = ",", sep = ";", fileEncoding="UTF-8-BOM")[,5:12])
fresh_weight3$Treatment = factor(fresh_weight3$Treatment, levels = c("Mock", "E2"))
dlab_theme = theme(axis.title.y = element_text(margin = margin(r = 10)), text = element_text(size=12), axis.text = element_text(size=12),
axis.text.x = element_text(margin = margin(t = 5), size = 12, face = "italic", colour = "black", angle = 20, hjust=1),
axis.text.y = element_text(color = "black"),
axis.line = element_blank(),
axis.ticks = element_line(size = 1),
axis.title.x = element_blank(),
legend.position="none",
legend.text= element_text(size = 12),
#legend.title = element_text(size = 16, face = "bold"),
panel.background = element_blank(),
panel.spacing.x = unit(1, "lines"),
panel.spacing.y=unit(0,"lines"),
panel.grid =  element_blank(),
legend.title = element_blank(),
#panel.grid.major.y =  element_line(colour = "#999999"),
panel.grid.minor.y =  element_blank(),
panel.border = element_rect(fill = NA, color = "black", linewidth = 1),
strip.background =element_rect(fill="white"),
strip.text.x = element_text(size = 12, hjust = 0.5))
helper_pooled_bar <- ggplot(data = fresh_weight3, aes(x = Line_mean, y = Fresh_weight_ratio_mean)) +
geom_bar(aes(color = Treatment), fill = "white", stat = "identity", position=position_dodge()) +
geom_errorbar(aes(x = Line_mean, ymax=Fresh_weight_ratio_mean + Fresh_weight_ratio_sd, ymin = Fresh_weight_ratio_mean - Fresh_weight_ratio_sd, color = Treatment), position = position_dodge(0.9),
size = 0.25, width = 0.25) +
geom_jitter(fresh_weight2, mapping = aes(x = Line, y = Ratio, shape = Batch, fill = Treatment, group = Treatment), position= position_jitterdodge(dodge.width = 0.9), alpha = 0.5, color = "grey") +
scale_color_manual(values = c("#F93D3D", "#0072B2"),
name = "Treatment", labels = c("Mock", "ETI"))  +
scale_shape_manual(values = unique(fresh_weight2$shapes)) +
labs(y = "Normalized fresh weight", x = "Line") +
dlab_theme +
scale_x_discrete(limits = c("SETI_wt", "SETI_eds1", "SETI_helperless", "SETI_adrs", "SETI_nrgs", "Col-0"), labels=c(expression("SETI wt"), expression("SETI" ~ italic("eds1")), expression("SETI" ~ italic("helperless")), expression("SETI" ~ italic("adr1s")),  expression("SETI" ~ italic("nrg1s")), expression("Col-0"))) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.6))
print(helper_pooled_bar)
################### Fisherâ€™s least significant difference (LSD) test
stats_table = data.frame(Line_treatment = rep(NA, 12),
sig_letters = rep(NA, 12), Batch = rep(NA, 12))
fresh_weight2$Line = factor(fresh_weight2$Line)
fresh_weight2$Treatment = factor(fresh_weight2$Treatment)
fresh_weight2$Batch = factor(fresh_weight2$Batch)
activity_treatment = aov(Fresh_weight~ Line*Treatment + Batch, data = fresh_weight2)
print(summary(activity_treatment))
LSD_result <- LSD.test(activity_treatment, c("Treatment", "Line"), alpha = 0.05)
stats_table$Line_treatment = factor(row.names(LSD_result$groups), levels = c("M:SETI_wt", "E2:SETI_wt", "M:SETI_eds1",
"E2:SETI_eds1", "M:SETI_helperless", "E2:SETI_helperless",
"M:SETI_adrs", "E2:SETI_adrs",
"M:SETI_nrgs", "E2:SETI_nrgs",
"M:Col", "E2:Col"))
stats_table$sig_letters = LSD_result$groups[[2]]
line_treatment_order = order(factor(stats_table$Line_treatment))
stats_table_1 = stats_table[line_treatment_order,]
stats_table_pooled = stats_table_1
print(LSD_result)
# Pooled plots
test = ggplot_build(helper_pooled_bar)
helper_pooled2 = helper_pooled_bar+
geom_text(data = tibble(test = 1:12), x = sort(test[["data"]][[1]][["x"]]), y = test[["data"]][[3]][["ymax"]][order(test[["data"]][[1]][["x"]])] + 0.05, label = stats_table_pooled$sig_letters, size = 3, color = "black", inherit.aes = FALSE)
print(helper_pooled2)
dlab_theme = theme(axis.title.y = element_text(margin = margin(r = 10)), text = element_text(size=12), axis.text = element_text(size=12),
axis.text.x = element_text(margin = margin(t = 5), size = 12, face = "italic", colour = "black", angle = 20, hjust=1),
axis.text.y = element_text(color = "black"),
axis.line = element_blank(),
axis.ticks = element_line(size = 1),
axis.title.x = element_blank(),
legend.position="none",
legend.text= element_text(size = 12),
#legend.title = element_text(size = 16, face = "bold"),
panel.background = element_blank(),
panel.spacing.x = unit(1, "lines"),
panel.spacing.y=unit(0,"lines"),
panel.grid =  element_blank(),
legend.title = element_blank(),
#panel.grid.major.y =  element_line(colour = "#999999"),
panel.grid.minor.y =  element_blank(),
panel.border = element_rect(fill = NA, color = "black", linewidth = 1),
strip.background =element_rect(fill="white"),
strip.text.x = element_text(size = 12, hjust = 0.5))
helper_pooled_bar <- ggplot(data = fresh_weight3, aes(x = Line_mean, y = Fresh_weight_ratio_mean)) +
geom_bar(aes(color = Treatment), fill = "white", stat = "identity", position=position_dodge()) +
geom_jitter(fresh_weight2, mapping = aes(x = Line, y = Ratio, shape = Batch, fill = Treatment, group = Treatment), position= position_jitterdodge(dodge.width = 0.9), alpha = 0.5, color = "grey") +
geom_errorbar(aes(x = Line_mean, ymax=Fresh_weight_ratio_mean + Fresh_weight_ratio_sd, ymin = Fresh_weight_ratio_mean - Fresh_weight_ratio_sd, color = Treatment), position = position_dodge(0.9),
size = 0.25, width = 0.25) +
scale_color_manual(values = c("#F93D3D", "#0072B2"),
name = "Treatment", labels = c("Mock", "ETI"))  +
scale_shape_manual(values = unique(fresh_weight2$shapes)) +
labs(y = "Normalized fresh weight", x = "Line") +
dlab_theme +
scale_x_discrete(limits = c("SETI_wt", "SETI_eds1", "SETI_helperless", "SETI_adrs", "SETI_nrgs", "Col-0"), labels=c(expression("SETI wt"), expression("SETI" ~ italic("eds1")), expression("SETI" ~ italic("helperless")), expression("SETI" ~ italic("adr1s")),  expression("SETI" ~ italic("nrg1s")), expression("Col-0"))) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.6))
print(helper_pooled_bar)
# Pooled plots
test = ggplot_build(helper_pooled_bar)
helper_pooled2 = helper_pooled_bar+
geom_text(data = tibble(test = 1:12), x = sort(test[["data"]][[1]][["x"]]), y = test[["data"]][[3]][["ymax"]][order(test[["data"]][[1]][["x"]])] + 0.05, label = stats_table_pooled$sig_letters, size = 3, color = "black", inherit.aes = FALSE)
print(helper_pooled2)
png(file="helper_fresh_weight_normalized.png",
width=1182, height=829, res = 120)
helper_pooled2
dev.off()
ggsave("helper_fresh_weight_normalized_legend.pdf", units = "in", width = 4,
height = 3.25)

knitr::opts_chunk$set(echo = TRUE)
library("ComplexUpset")
library("EnhancedVolcano")
library("ggpubr")
library("stringr")
library("r2r")
library("ComplexUpset")
library("EnhancedVolcano")
library("ggpubr")
library("stringr")
library("r2r")
upset_plot_reorder = function(data_list, line_treatment, line_treatment_list){
for (gene_id in data_list$target) {
for (lines in line_treatment) {
if(lines %in% data_list[data_list$target == gene_id, "contrast"]){
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],1)
}else{
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],0)
}
}
}
return(line_treatment_list)
}
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
gene_list = read.csv2(file = "./Data/Significant DE genes list and statistics.csv", sep = ",", dec = ".",
header = TRUE)
gene_list = gene_list[gene_list$contrast != "SETI_p.E-SETI_s.E" & gene_list$contrast != "SETI_p.E-SETI_WT.E"
& gene_list$contrast != "SETI_s.E-SETI_WT.E", ]
gene_list$contrast = factor(gene_list$contrast)
full_gene_list = read.csv("./Data/Full_geneslist_logF2.csv", sep = ";", dec = ".", header = TRUE, row.names = 1)
sag101_dependent = read.csv2(file = "./Data/SAG101_dependent.csv", dec = ".",
header = TRUE)
sag101_dependent$term_name = factor(sag101_dependent$term_name, levels = sag101_dependent$term_name[order(sag101_dependent$negative_log10_of_adjusted_p_value)])
sag101_dependent$term_ratio = paste(sag101_dependent$intersection_size, sag101_dependent$term_size, sep = "/")
pad4_dependent = read.csv2(file = "./Data/PAD4_dependent.csv", dec = ".",
header = TRUE)
pad4_dependent$term_name = factor(pad4_dependent$term_name, levels = pad4_dependent$term_name[order(pad4_dependent$negative_log10_of_adjusted_p_value)])
pad4_dependent$term_ratio = paste(pad4_dependent$intersection_size, pad4_dependent$term_size, sep = "/")
pad4_sag101_dependent = read.csv2(file = "./Data/PAD4_sag101_dependent.csv", dec = ".",
header = TRUE)
pad4_sag101_dependent$term_name = factor(pad4_sag101_dependent$term_name, levels = pad4_sag101_dependent$term_name[order(pad4_sag101_dependent$negative_log10_of_adjusted_p_value)])
pad4_sag101_dependent$term_ratio = paste(pad4_sag101_dependent$intersection_size, pad4_sag101_dependent$term_size, sep = "/")
dlab_theme = theme(text = element_text(size=6), axis.text = element_text(size=6),
axis.text.x = element_text(size = 6, face = "bold", colour = "black"),
axis.text.y = element_text(color = "black", angle = 0, hjust = 1),
#axis.line = element_line(size = 1, linetype = "solid"),
axis.ticks = element_line(size = 1),
axis.title.y = element_blank(),
legend.position="none",
legend.text= element_text(size = 10),
#legend.title = element_text(size = 16, face = "bold"),
panel.background = element_blank(),
#panel.spacing.x = unit(1, "lines"),
#panel.spacing.y=unit(0,"lines"),
#panel.grid =  element_blank(),
panel.grid.major.x =  element_line(colour = "#999999", linetype = "solid"),
panel.grid.minor.x =  element_line(colour = "#CCCCCC", linetype = "solid"),
panel.grid.major.y =  element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=1),
strip.background =element_rect(fill="#6495ED"),
plot.margin = margin(10,10,0,0),
strip.text.x = element_text(size = 6, face = "bold", hjust = 0.5))
pad4_dependent_plot = ggplot(pad4_dependent, mapping = aes(x = term_name, y = negative_log10_of_adjusted_p_value)) +
geom_bar(aes(fill = source), stat = "identity") +
geom_text(aes(label = term_ratio, y = negative_log10_of_adjusted_p_value + 2.5), size = 2) +
ylab("-Log10(FDR)") +
dlab_theme +
coord_flip() +
facet_grid(rows = vars(source), scales = 'free_y', space = "free_y", drop = TRUE) +
scale_x_discrete(breaks = pad4_dependent$term_name, labels = toupper(str_wrap(as.character(pad4_dependent$term_name), width = 25))) +
scale_y_continuous(expand = c(0,0), limits = c(0,30))
sag101_dependent_plot = ggplot(sag101_dependent, mapping = aes(x = term_name, y = negative_log10_of_adjusted_p_value)) +
geom_bar(aes(fill = source), stat = "identity") +
geom_text(aes(label = term_ratio, y =  negative_log10_of_adjusted_p_value+ 2.5), size = 2) +
ylab("-Log10(FDR)") +
dlab_theme +
coord_flip() +
facet_grid(rows = vars(source), scales = 'free_y', space = "free_y", drop = TRUE) +
scale_x_discrete(breaks = sag101_dependent$term_name, labels = toupper(str_wrap(as.character(sag101_dependent$term_name), width = 25)))+
scale_y_continuous(expand = c(0,0), limits = c(0,30))
pad4_sag101_dependent_plot = ggplot(pad4_sag101_dependent, mapping = aes(x = term_name, y = negative_log10_of_adjusted_p_value)) +
geom_bar(aes(fill = source), stat = "identity") +
geom_text(aes(label = term_ratio, y = negative_log10_of_adjusted_p_value+ 2.5), size = 2) +
ylab("-Log10(FDR)") +
dlab_theme +
coord_flip() +
facet_grid(rows = vars(source), scales = 'free_y', space = "free_y", drop = TRUE) +
scale_x_discrete(breaks = pad4_sag101_dependent$term_name, labels = toupper(str_wrap(as.character(pad4_sag101_dependent$term_name), width = 25)))+
scale_y_continuous(expand = c(0,0), limits = c(0,30))
ggsave("pad4_dependent_go_cluster.pdf", plot = pad4_dependent_plot , units = "in", width = 4,
height = 3.25)
ggsave("sag101_dependent_go_cluster.pdf", plot = sag101_dependent_plot, units = "in", width = 4,
height = 3.25)
ggsave("pad4_sag101_dependent_go_cluster.pdf", plot = pad4_sag101_dependent_plot , units = "in", width = 4,
height = 3.25)
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_p.E-SETI_p.mock", "SETI_s.E-SETI_s.mock", "SETI_ps.E-SETI_ps.mock", "SETI_e.E-SETI_e.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_p.E-SETI_p.mock" =  NULL, "SETI_s.E-SETI_s.mock" =  NULL, "SETI_ps.E-SETI_ps.mock" =  NULL,  "SETI_e.E-SETI_e.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_up = data.frame(genes = upregulated$target, SETI = upregulated_list[["SETI_WT.E-SETI_WT.mock"]], PAD4 = upregulated_list[["SETI_p.E-SETI_p.mock"]], SAG101 = upregulated_list[["SETI_s.E-SETI_s.mock"]], PAD4SAG101 = upregulated_list[["SETI_ps.E-SETI_ps.mock"]],
EDS1 = upregulated_list[["SETI_e.E-SETI_e.mock"]])
upset_plot_up = upset_plot_up[!duplicated(upset_plot_up$genes),]
View(gene_list)
partial_dependent = read.csv2(file = "./Data/partial_dependency.csv", dec = ".",
header = TRUE)
View(partial_dependent)
partial_dependent = read.csv2(file = "./Data/partial_dependency.csv", dec = ".",
header = TRUE)
SETI_pad4_sag101 = upset_plot_up$genes[upset_plot_up$SETI == 1 & upset_plot_up$PAD4 == 1 & upset_plot_up$SAG101 == 1]
partial_dependent$Genes %in% SETI_pad4_sag101
all(partial_dependent$Genes %in% SETI_pad4_sag101)
partial_dependent$Genes
knitr::opts_chunk$set(echo = TRUE)
library("ComplexUpset")
library("EnhancedVolcano")
library("ggpubr")
library("stringr")
library("r2r")
knitr::opts_chunk$set(echo = TRUE)
library("ComplexUpset")
library("EnhancedVolcano")
library("ggpubr")
library("stringr")
library("r2r")
upset_plot_reorder = function(data_list, line_treatment, line_treatment_list){
for (gene_id in data_list$target) {
for (lines in line_treatment) {
if(lines %in% data_list[data_list$target == gene_id, "contrast"]){
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],1)
}else{
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],0)
}
}
}
return(line_treatment_list)
}
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
gene_list = read.csv2(file = "./Data/Significant DE genes list and statistics.csv", sep = ",", dec = ".",
header = TRUE)
gene_list = gene_list[gene_list$contrast != "SETI_p.E-SETI_s.E" & gene_list$contrast != "SETI_p.E-SETI_WT.E"
& gene_list$contrast != "SETI_s.E-SETI_WT.E", ]
gene_list$contrast = factor(gene_list$contrast)
full_gene_list = read.csv("./Data/Full_geneslist_logF2.csv", sep = ";", dec = ".", header = TRUE, row.names = 1)
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
View(full_gene_list)
View(gene_list)
length(unique(gene_list$target))
length(unique(gene_list$target))
knitr::opts_chunk$set(echo = TRUE)
library("ComplexUpset")
library("ggpubr")
library("stringr")
library("r2r")
library("gt")
upset_plot_reorder = function(data_list, line_treatment, line_treatment_list){
for (gene_id in data_list$target) {
for (lines in line_treatment) {
if(lines %in% data_list[data_list$target == gene_id, "contrast"]){
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],1)
}else{
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],0)
}
}
}
return(line_treatment_list)
}
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
dlab_theme = theme(text = element_text(size=5), axis.text = element_text(size=5),
axis.text.x = element_text(size = 5, face = "bold", colour = "black"),
axis.text.y = element_text(color = "black", angle = 0, hjust = 1),
#axis.line = element_line(size = 1, linetype = "solid"),
axis.ticks = element_line(size = 1),
axis.title.y = element_blank(),
legend.position="none",
legend.text= element_text(size = 5),
#legend.title = element_text(size = 16, face = "bold"),
panel.background = element_blank(),
#panel.spacing.x = unit(1, "lines"),
#panel.spacing.y=unit(0,"lines"),
#panel.grid =  element_blank(),
panel.grid.major.x =  element_line(colour = "#999999", linetype = "solid"),
panel.grid.minor.x =  element_line(colour = "#CCCCCC", linetype = "solid"),
panel.grid.major.y =  element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=1),
strip.background =element_rect(fill="#6495ED"),
plot.margin = margin(10,10,0,0),
strip.text.x = element_text(size = 5, face = "bold", hjust = 0.5))
cluster1_plot = ggplot(cluster_01, mapping = aes(x = term_name, y = negative_log10_of_adjusted_p_value)) +
geom_bar(aes(fill = source), stat = "identity") +
geom_text(aes(label = term_ratio, y = negative_log10_of_adjusted_p_value + 2.5), size = 1.5) +
ylab("-Log10(FDR)") +
dlab_theme +
coord_flip() +
facet_grid(rows = vars(source), scales = 'free_y', space = "free_y", drop = TRUE) +
scale_x_discrete(breaks = cluster_01$term_name, labels = toupper(str_wrap(as.character(cluster_01$term_name), width = 25))) +
scale_y_continuous(expand = c(0,0), limits = c(0,30))
gene_list = read.csv2("./Data/Immune_Pathways/3drnaseq/X2024.08.05.11.24.04.j284/result/Significant DE genes list and statistics.csv", sep = ",", dec = ".", header = TRUE)
View(gene_list)
length(unique(gene_list))
length(unique(gene_list$target))
View(gene_list)
gene_list = read.csv2(file = "./Data/Downregulated_ETI/Significant DE genes list and statistics.csv", sep = ",", dec = ".",
header = TRUE)
gene_list = gene_list[gene_list$contrast != "SETI_p.E-SETI_s.E" & gene_list$contrast != "SETI_p.E-SETI_WT.E"
& gene_list$contrast != "SETI_s.E-SETI_WT.E", ]
gene_list$contrast = factor(gene_list$contrast)
full_gene_list = read.csv("./Data/Downregulated_ETI/Full_geneslist_logF2.csv", sep = ";", dec = ".", header = TRUE, row.names = 1)
length(unique(gene_list))
length(unique(gene_list$target))
knitr::opts_chunk$set(echo = TRUE)
library("ComplexUpset")
library("EnhancedVolcano")
library("ggpubr")
library("stringr")
library("r2r")
upset_plot_reorder = function(data_list, line_treatment, line_treatment_list){
for (gene_id in data_list$target) {
for (lines in line_treatment) {
if(lines %in% data_list[data_list$target == gene_id, "contrast"]){
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],1)
}else{
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],0)
}
}
}
return(line_treatment_list)
}
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
upset_plot_reorder = function(data_list, line_treatment, line_treatment_list){
for (gene_id in data_list$target) {
for (lines in line_treatment) {
if(lines %in% data_list[data_list$target == gene_id, "contrast"]){
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],1)
}else{
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],0)
}
}
}
return(line_treatment_list)
}
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
gene_list = read.csv2(file = "./Data/Significant DE genes list and statistics.csv", sep = ",", dec = ".",
header = TRUE)
gene_list = gene_list[gene_list$contrast != "SETI_p.E-SETI_s.E" & gene_list$contrast != "SETI_p.E-SETI_WT.E"
& gene_list$contrast != "SETI_s.E-SETI_WT.E", ]
gene_list$contrast = factor(gene_list$contrast)
full_gene_list = read.csv("./Data/Full_geneslist_logF2.csv", sep = ";", dec = ".", header = TRUE, row.names = 1)
dlab_theme = theme(text = element_text(size=12), axis.text = element_text(size=12),
axis.text.x = element_text(margin = margin(t = 5), size = 12, face = "bold", colour = "black", angle = 20, hjust=1),
axis.text.y = element_text(color = "black"),
#axis.line = element_line(size = 1, linetype = "solid"),
axis.ticks = element_line(size = 1),
axis.title.y = element_blank(),
legend.position="none",
legend.text= element_text(size = 16),
#legend.title = element_text(size = 16, face = "bold"),
panel.background = element_blank(),
#panel.spacing.x = unit(1, "lines"),
#panel.spacing.y=unit(0,"lines"),
#panel.grid =  element_blank(),
panel.grid.major.x =  element_line(colour = "#999999"),
panel.grid.minor.x =  element_line(colour = "#CCCCCC", linetype = "solid"),
panel.border = element_rect(colour = "black", fill=NA, size=1),
strip.background =element_rect(fill="#6495ED"),
strip.text.x = element_text(size = 12, face = "bold", hjust = 0.5))
log2_df = read.csv2("./Data/Full_geneslist_logF2.csv", dec = ".")
p_df = read.csv("./Data/Full_geneslist_pval.csv", dec = ".")
seti_vulcano = data.frame(genes = log2_df$Column1, 'log2FC' = log2_df$SETI_WT.E.SETI_WT.mock, "adj.pval" = p_df$SETI_WT.E.SETI_WT.mock)
sag101_vulcano = data.frame(genes = log2_df$Column1, 'log2FC' = log2_df$SETI_s.E.SETI_s.mock, "adj.pval" = p_df$SETI_s.E.SETI_s.mock)
pad4_vulcano = data.frame(genes = log2_df$Column1, 'log2FC' = log2_df$SETI_p.E.SETI_p.mock, "adj.pval" = p_df$SETI_p.E.SETI_p.mock)
pad4_dependant = hashmap()
general_immunity = hashmap()
sag101_dependant = hashmap()
pad4_dependant[[c("NPR1", "MC2", "PUB13")]] = c("AT1G64280", "AT4G25110", "AT3G46510")
general_immunity[[c("ICS1", "PR1", "CAMTA3")]] = c("AT1G74710", "AT2G14610", "AT2G22300")
sag101_dependant[[c("LAZ5", "RPS4", "CRK4")]] = c("AT5G44870", "AT5G45250", "AT3G45860")
#, "SAG101", "PAD4" "AT5G14930", "AT3G52430"
highlight_genes = c(sag101_dependant[[c("LAZ5", "RPS4", "CRK4")]], pad4_dependant[[c("NPR1", "MC2", "PUB13")]], general_immunity[[c("ICS1", "PR1", "CAMTA3")]])
sag101_vulcano_plot = EnhancedVolcano(sag101_vulcano  ,
lab = sag101_vulcano$genes,
x = 'log2FC',
y = "adj.pval",
pCutoff = 0.01,
selectLab = highlight_genes,
FCcutoff = 1,
xlim = c(-5.5, 5.5),
ylim = c(0, -log10(10e-12)),
pointSize = 1,
labSize = 3,
title =  expression(bold("SETI") ~ bolditalic("sag101")),
subtitle = 'Differential expression',
caption = 'FC cutoff: 1; p-value cutoff: 0.01',
legendPosition = "none",
legendLabSize = 8,
captionLabSize = 8,
subtitleLabSize = 8,
axisLabSize = 8,
titleLabSize = 9,
col = c('grey30', '#12A27B', 'royalblue', 'red2'),
colAlpha = 0.9,
drawConnectors = TRUE,
endsConnectors = "last",
hline = c(10e-8),
widthConnectors = 0.5,
colConnectors = "black",
directionConnectors = "both",
border = "full",
arrowheads = TRUE)
seti_vulcano_plot = EnhancedVolcano(seti_vulcano  ,
lab = seti_vulcano$genes,
x = 'log2FC',
y = "adj.pval",
pCutoff = 0.01,
selectLab = highlight_genes,
FCcutoff = 1,
xlim = c(-5.5, 5.5),
ylim = c(0, -log10(10e-12)),
pointSize = 1,
labSize = 3,
title =  expression(bold("SETI wt")),
subtitle = 'Differential expression',
caption = 'FC cutoff: 1; p-value cutoff: 0.01',
legendPosition = "none",
legendLabSize = 8,
captionLabSize = 8,
subtitleLabSize = 8,
axisLabSize = 8,
titleLabSize = 9,
col = c('grey30', '#12A27B', 'royalblue', 'red2'),
colAlpha = 0.9,
drawConnectors = TRUE,
endsConnectors = "last",
hline = c(10e-8),
widthConnectors = 0.5,
colConnectors = "black",
directionConnectors = "both",
border = "full",
arrowheads = TRUE)
pad4_vulcano_plot = EnhancedVolcano(pad4_vulcano,
lab = pad4_vulcano$genes,
x = 'log2FC',
y = "adj.pval",
pCutoff = 0.01,
selectLab = highlight_genes,
FCcutoff = 1,
xlim = c(-5.5, 5.5),
ylim = c(0, -log10(10e-12)),
pointSize = 1,
labSize = 3,
title =  expression(bold("SETI" ~ bolditalic("pad4"))),
subtitle = 'Differential expression',
caption = 'FC cutoff: 1; p-value cutoff: 0.01',
legendPosition = "right",
legendLabSize = 8,
captionLabSize = 8,
subtitleLabSize = 8,
axisLabSize = 8,
titleLabSize = 9,
col = c('grey30', '#12A27B', 'royalblue', 'red2'),
colAlpha = 0.9,
drawConnectors = TRUE,
endsConnectors = "last",
hline = c(10e-8),
widthConnectors = 0.5,
colConnectors = "black",
directionConnectors = "both",
border = "full",
arrowheads = TRUE)
# ggsave("seti_go_vulcano.png", plot = seti_vulcano_plot, units = "in", width = 4,
#   height = 3.25)
#ggsave("pad4_go_vulcano.png", plot = pad4_vulcano_plot, units = "in", width = 4,
#   height = 3.25)
#ggsave("sag101_go_vulcano.png", plot = sag101_vulcano_plot, units = "in", width = 4,
#  height = 3.25)
# line_vulcano = grid.arrange(seti_vulcano_plot, pad4_vulcano_plot, sag101_vulcano_plot, nrow = 3, widths = c(4,4,4))
#
#
# ggsave("Fig_5_supp.pdf", plot = line_vulcano , units = "in", width = 8,
#   height = 7)
seti_vulcano_plot
sag101_vulcano_plot
pad4_vulcano_plot
pad4_vulcano_plot
length(unique(gene_list$target))
knitr::opts_chunk$set(echo = TRUE)
library("ComplexUpset")
library("EnhancedVolcano")
library("ggpubr")
library("stringr")
library("r2r")
upset_plot_reorder = function(data_list, line_treatment, line_treatment_list){
for (gene_id in data_list$target) {
for (lines in line_treatment) {
if(lines %in% data_list[data_list$target == gene_id, "contrast"]){
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],1)
}else{
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],0)
}
}
}
return(line_treatment_list)
}
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
gene_list = read.csv2(file = "./Data/Significant DE genes list and statistics_2.csv", sep = ",", dec = ".",
header = TRUE)
gene_list = gene_list[gene_list$contrast != "SETI_p.E-SETI_s.E" & gene_list$contrast != "SETI_p.E-SETI_WT.E"
& gene_list$contrast != "SETI_s.E-SETI_WT.E", ]
gene_list$contrast = factor(gene_list$contrast)
full_gene_list = read.csv("./Data/Full_geneslist_logF2.csv", sep = ";", dec = ".", header = TRUE, row.names = 1)
length(unique(gene_list$target))
knitr::opts_chunk$set(echo = TRUE)
library("ComplexUpset")
library("EnhancedVolcano")
library("ggpubr")
library("stringr")
library("r2r")
upset_plot_reorder = function(data_list, line_treatment, line_treatment_list){
for (gene_id in data_list$target) {
for (lines in line_treatment) {
if(lines %in% data_list[data_list$target == gene_id, "contrast"]){
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],1)
}else{
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],0)
}
}
}
return(line_treatment_list)
}
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
gene_list = read.csv2(file = "./Data/Significant DE genes list and statistics_3.csv", sep = ",", dec = ".",
header = TRUE)
gene_list = gene_list[gene_list$contrast != "SETI_p.E-SETI_s.E" & gene_list$contrast != "SETI_p.E-SETI_WT.E"
& gene_list$contrast != "SETI_s.E-SETI_WT.E", ]
gene_list$contrast = factor(gene_list$contrast)
full_gene_list = read.csv("./Data/Full_geneslist_logF2.csv", sep = ";", dec = ".", header = TRUE, row.names = 1)
length(unique(gene_list$target))
heatmap = read.csv2(Target in each cluster heatmap 5292 DE genes)
heatmap = read.csv2("Target in each cluster heatmap 5292 DE genes.csv")
heatmap = read.csv2("Target in each cluster heatmap 5292 DE genes.csv")
heatmap = read.csv2("Data/Target in each cluster heatmap 5292 DE genes.csv")
View(heatmap)
heatmap = read.csv2("Data/Target in each cluster heatmap 5292 DE genes.csv", sep = ",")
View(heatmap)
View(gene_list)
View(full_gene_list)
setdiff(heatmap$Targets, gene_list$target)
test = full_gene_list[setdiff(heatmap$Targets, gene_list$target) %in% rownames(full_gene_list)]
test = full_gene_list[rownames(full_gene_list) %in% setdiff(heatmap$Targets, gene_list$target)]
test = full_gene_list[setdiff(heatmap$Targets, gene_list$target) %in% rownames(full_gene_list),]
test = full_gene_list[rownames(full_gene_list) %in% setdiff(heatmap$Targets, gene_list$target), ]
View(test)
View(heatmap)
gene_list = read.csv2(file = "./Data/Significant DE genes list and statistics.csv", sep = ",", dec = ".",
header = TRUE)
gene_list = gene_list[gene_list$contrast != "SETI_p.E-SETI_s.E" & gene_list$contrast != "SETI_p.E-SETI_WT.E"
& gene_list$contrast != "SETI_s.E-SETI_WT.E", ]
gene_list$contrast = factor(gene_list$contrast)
full_gene_list = read.csv("./Data/Full_geneslist_logF2.csv", sep = ";", dec = ".", header = TRUE, row.names = 1)
gene_list = read.csv2(file = "./Data/Significant DE genes list and statistics.csv", sep = ",", dec = ".",
header = TRUE)
length(unique(gene_list$target))

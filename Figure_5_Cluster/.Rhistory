knitr::opts_chunk$set(echo = TRUE)
library("ComplexUpset")
library("EnhancedVolcano")
library("ggpubr")
library("stringr")
library("r2r")
library("ComplexUpset")
library("EnhancedVolcano")
library("ggpubr")
library("stringr")
library("r2r")
upset_plot_reorder = function(data_list, line_treatment, line_treatment_list){
for (gene_id in data_list$target) {
for (lines in line_treatment) {
if(lines %in% data_list[data_list$target == gene_id, "contrast"]){
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],1)
}else{
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],0)
}
}
}
return(line_treatment_list)
}
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
gene_list = read.csv2(file = "./Data/Significant DE genes list and statistics.csv", sep = ",", dec = ".",
header = TRUE)
gene_list = gene_list[gene_list$contrast != "SETI_p.E-SETI_s.E" & gene_list$contrast != "SETI_p.E-SETI_WT.E"
& gene_list$contrast != "SETI_s.E-SETI_WT.E", ]
gene_list$contrast = factor(gene_list$contrast)
full_gene_list = read.csv("./Data/Full_geneslist_logF2.csv", sep = ";", dec = ".", header = TRUE, row.names = 1)
sag101_dependent = read.csv2(file = "./Data/SAG101_dependent.csv", dec = ".",
header = TRUE)
sag101_dependent$term_name = factor(sag101_dependent$term_name, levels = sag101_dependent$term_name[order(sag101_dependent$negative_log10_of_adjusted_p_value)])
sag101_dependent$term_ratio = paste(sag101_dependent$intersection_size, sag101_dependent$term_size, sep = "/")
pad4_dependent = read.csv2(file = "./Data/PAD4_dependent.csv", dec = ".",
header = TRUE)
pad4_dependent$term_name = factor(pad4_dependent$term_name, levels = pad4_dependent$term_name[order(pad4_dependent$negative_log10_of_adjusted_p_value)])
pad4_dependent$term_ratio = paste(pad4_dependent$intersection_size, pad4_dependent$term_size, sep = "/")
pad4_sag101_dependent = read.csv2(file = "./Data/PAD4_sag101_dependent.csv", dec = ".",
header = TRUE)
pad4_sag101_dependent$term_name = factor(pad4_sag101_dependent$term_name, levels = pad4_sag101_dependent$term_name[order(pad4_sag101_dependent$negative_log10_of_adjusted_p_value)])
pad4_sag101_dependent$term_ratio = paste(pad4_sag101_dependent$intersection_size, pad4_sag101_dependent$term_size, sep = "/")
dlab_theme = theme(text = element_text(size=6), axis.text = element_text(size=6),
axis.text.x = element_text(size = 6, face = "bold", colour = "black"),
axis.text.y = element_text(color = "black", angle = 0, hjust = 1),
#axis.line = element_line(size = 1, linetype = "solid"),
axis.ticks = element_line(size = 1),
axis.title.y = element_blank(),
legend.position="none",
legend.text= element_text(size = 10),
#legend.title = element_text(size = 16, face = "bold"),
panel.background = element_blank(),
#panel.spacing.x = unit(1, "lines"),
#panel.spacing.y=unit(0,"lines"),
#panel.grid =  element_blank(),
panel.grid.major.x =  element_line(colour = "#999999", linetype = "solid"),
panel.grid.minor.x =  element_line(colour = "#CCCCCC", linetype = "solid"),
panel.grid.major.y =  element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=1),
strip.background =element_rect(fill="#6495ED"),
plot.margin = margin(10,10,0,0),
strip.text.x = element_text(size = 6, face = "bold", hjust = 0.5))
pad4_dependent_plot = ggplot(pad4_dependent, mapping = aes(x = term_name, y = negative_log10_of_adjusted_p_value)) +
geom_bar(aes(fill = source), stat = "identity") +
geom_text(aes(label = term_ratio, y = negative_log10_of_adjusted_p_value + 2.5), size = 2) +
ylab("-Log10(FDR)") +
dlab_theme +
coord_flip() +
facet_grid(rows = vars(source), scales = 'free_y', space = "free_y", drop = TRUE) +
scale_x_discrete(breaks = pad4_dependent$term_name, labels = toupper(str_wrap(as.character(pad4_dependent$term_name), width = 25))) +
scale_y_continuous(expand = c(0,0), limits = c(0,30))
sag101_dependent_plot = ggplot(sag101_dependent, mapping = aes(x = term_name, y = negative_log10_of_adjusted_p_value)) +
geom_bar(aes(fill = source), stat = "identity") +
geom_text(aes(label = term_ratio, y =  negative_log10_of_adjusted_p_value+ 2.5), size = 2) +
ylab("-Log10(FDR)") +
dlab_theme +
coord_flip() +
facet_grid(rows = vars(source), scales = 'free_y', space = "free_y", drop = TRUE) +
scale_x_discrete(breaks = sag101_dependent$term_name, labels = toupper(str_wrap(as.character(sag101_dependent$term_name), width = 25)))+
scale_y_continuous(expand = c(0,0), limits = c(0,30))
pad4_sag101_dependent_plot = ggplot(pad4_sag101_dependent, mapping = aes(x = term_name, y = negative_log10_of_adjusted_p_value)) +
geom_bar(aes(fill = source), stat = "identity") +
geom_text(aes(label = term_ratio, y = negative_log10_of_adjusted_p_value+ 2.5), size = 2) +
ylab("-Log10(FDR)") +
dlab_theme +
coord_flip() +
facet_grid(rows = vars(source), scales = 'free_y', space = "free_y", drop = TRUE) +
scale_x_discrete(breaks = pad4_sag101_dependent$term_name, labels = toupper(str_wrap(as.character(pad4_sag101_dependent$term_name), width = 25)))+
scale_y_continuous(expand = c(0,0), limits = c(0,30))
ggsave("pad4_dependent_go_cluster.pdf", plot = pad4_dependent_plot , units = "in", width = 4,
height = 3.25)
ggsave("sag101_dependent_go_cluster.pdf", plot = sag101_dependent_plot, units = "in", width = 4,
height = 3.25)
ggsave("pad4_sag101_dependent_go_cluster.pdf", plot = pad4_sag101_dependent_plot , units = "in", width = 4,
height = 3.25)
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_p.E-SETI_p.mock", "SETI_s.E-SETI_s.mock", "SETI_ps.E-SETI_ps.mock", "SETI_e.E-SETI_e.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_p.E-SETI_p.mock" =  NULL, "SETI_s.E-SETI_s.mock" =  NULL, "SETI_ps.E-SETI_ps.mock" =  NULL,  "SETI_e.E-SETI_e.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_up = data.frame(genes = upregulated$target, SETI = upregulated_list[["SETI_WT.E-SETI_WT.mock"]], PAD4 = upregulated_list[["SETI_p.E-SETI_p.mock"]], SAG101 = upregulated_list[["SETI_s.E-SETI_s.mock"]], PAD4SAG101 = upregulated_list[["SETI_ps.E-SETI_ps.mock"]],
EDS1 = upregulated_list[["SETI_e.E-SETI_e.mock"]])
upset_plot_up = upset_plot_up[!duplicated(upset_plot_up$genes),]
View(gene_list)
partial_dependent = read.csv2(file = "./Data/partial_dependency.csv", dec = ".",
header = TRUE)
View(partial_dependent)
partial_dependent = read.csv2(file = "./Data/partial_dependency.csv", dec = ".",
header = TRUE)
SETI_pad4_sag101 = upset_plot_up$genes[upset_plot_up$SETI == 1 & upset_plot_up$PAD4 == 1 & upset_plot_up$SAG101 == 1]
partial_dependent$Genes %in% SETI_pad4_sag101
all(partial_dependent$Genes %in% SETI_pad4_sag101)
partial_dependent$Genes

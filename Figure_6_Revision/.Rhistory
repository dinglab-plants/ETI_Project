for (gene_id in data_list$target) {
for (lines in line_treatment) {
if(lines %in% data_list[data_list$target == gene_id, "contrast"]){
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],1)
}else{
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],0)
}
}
}
return(line_treatment_list)
}
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
gene_list = read.csv2("./Data/Immune_Pathways/3drnaseq/X2024.08.05.11.24.04.j284/result/Significant DE genes list and statistics.csv", sep = ",", dec = ".", header = TRUE)
gene_list = gene_list[gene_list$contrast %in% c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock"),]
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_WT.P-SETI_WT.mock" =  NULL, "SETI_WT.PE-SETI_WT.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_up = data.frame(genes = upregulated$target, ETI = upregulated_list[["SETI_WT.E-SETI_WT.mock"]], PTI = upregulated_list[["SETI_WT.P-SETI_WT.mock"]], PTI_plus_ETI = upregulated_list[["SETI_WT.PE-SETI_WT.mock"]])
upset_plot_up = upset_plot_up[!duplicated(upset_plot_up$genes),]
upset(upset_plot_up, colnames(upset_plot_up)[1:4])
library("ComplexUpset")
library("EnhancedVolcano")
library("ggpubr")
library("stringr")
library("r2r")
library("gt")
library("ComplexUpset")
upset_plot_reorder = function(data_list, line_treatment, line_treatment_list){
for (gene_id in data_list$target) {
for (lines in line_treatment) {
if(lines %in% data_list[data_list$target == gene_id, "contrast"]){
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],1)
}else{
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],0)
}
}
}
return(line_treatment_list)
}
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
colnames(upset_plot_up)[1:4]
gene_list = read.csv2("./Data/Immune_Pathways/3drnaseq/X2024.08.05.11.24.04.j284/result/Significant DE genes list and statistics.csv", sep = ",", dec = ".", header = TRUE)
gene_list = gene_list[gene_list$contrast %in% c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock"),]
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_WT.P-SETI_WT.mock" =  NULL, "SETI_WT.PE-SETI_WT.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_up = data.frame(genes = upregulated$target, ETI = upregulated_list[["SETI_WT.E-SETI_WT.mock"]], PTI = upregulated_list[["SETI_WT.P-SETI_WT.mock"]], PTI_plus_ETI = upregulated_list[["SETI_WT.PE-SETI_WT.mock"]])
upset_plot_up = upset_plot_up[!duplicated(upset_plot_up$genes),]
colnames(upset_plot_up)[1:4]
upset_plot_up
upset(upset_plot_up, colnames(upset_plot_up)[1:4])
upset(upset_plot_up, colnames(upset_plot_up))
upset(upset_plot_up, colnames(upset_plot_up))
gene_list = read.csv2("./Data/Immune_Pathways/3drnaseq/X2024.08.05.11.24.04.j284/result/Significant DE genes list and statistics.csv", sep = ",", dec = ".", header = TRUE)
gene_list = gene_list[gene_list$contrast %in% c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock"),]
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_WT.P-SETI_WT.mock" =  NULL, "SETI_WT.PE-SETI_WT.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_up = data.frame(genes = upregulated$target, ETI = upregulated_list[["SETI_WT.E-SETI_WT.mock"]], PTI = upregulated_list[["SETI_WT.P-SETI_WT.mock"]], PTI_plus_ETI = upregulated_list[["SETI_WT.PE-SETI_WT.mock"]])
upset_plot_up = upset_plot_up[!duplicated(upset_plot_up$genes),]
upset(upset_plot_up, colnames(upset_plot_up)[1:4])
var.lab3 = c(
"PTI" = "PTI",
"ETI" = "ETI",
"PTI_plus_ETI" = "PTI + ETI")[sort(1:3, decreasing = TRUE)]
vlabeller <- function (variable, value) {
return(var.lab3[value])
}
upset_plot_up = upset_plot_up[,c(1, sort(2:4, decreasing = TRUE))]
View(upset_plot_up)
sort(2:4, decreasing = TRUE))
sort(2:4, decreasing = TRUE)
gene_list = read.csv2("./Data/Immune_Pathways/3drnaseq/X2024.08.05.11.24.04.j284/result/Significant DE genes list and statistics.csv", sep = ",", dec = ".", header = TRUE)
gene_list = gene_list[gene_list$contrast %in% c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock"),]
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_WT.P-SETI_WT.mock" =  NULL, "SETI_WT.PE-SETI_WT.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_up = data.frame(genes = upregulated$target, ETI = upregulated_list[["SETI_WT.E-SETI_WT.mock"]], PTI = upregulated_list[["SETI_WT.P-SETI_WT.mock"]], PTI_plus_ETI = upregulated_list[["SETI_WT.PE-SETI_WT.mock"]])
upset_plot_up = upset_plot_up[!duplicated(upset_plot_up$genes),]
upset(upset_plot_up, colnames(upset_plot_up)[1:4])
View(upset_plot_up)
var.lab3 = c(
"PTI" = "PTI",
"ETI" = "ETI",
"PTI_plus_ETI" = "PTI + ETI")[sort(1:3, decreasing = TRUE)]
vlabeller <- function (variable, value) {
return(var.lab3[value])
}
upset_plot_up = upset_plot_up[,c(1, sort(2:4, decreasing = TRUE))]
upset_up_plot = upset(upset_plot_up, colnames(upset_plot_up[,2:4]), name='Lines', width_ratio=0.1, labeller= vlabeller, sort_sets=FALSE, set_sizes=FALSE, themes=upset_default_themes(text=element_text(size=8))) + ggtitle('Intersection of upregulated DEGs')
upset_up_plot
gene_list = read.csv2("./Data/Immune_Pathways/3drnaseq/X2024.08.05.11.24.04.j284/result/Significant DE genes list and statistics.csv", sep = ",", dec = ".", header = TRUE)
gene_list = gene_list[gene_list$contrast %in% c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock"),]
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_WT.P-SETI_WT.mock" =  NULL, "SETI_WT.PE-SETI_WT.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_reorder = function(data_list, line_treatment, line_treatment_list){
for (gene_id in data_list$target) {
for (lines in line_treatment) {
if(lines %in% data_list[data_list$target == gene_id, "contrast"]){
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],1)
}else{
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],0)
}
}
}
return(line_treatment_list)
}
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
gene_list = read.csv2("./Data/Immune_Pathways/3drnaseq/X2024.08.05.11.24.04.j284/result/Significant DE genes list and statistics.csv", sep = ",", dec = ".", header = TRUE)
gene_list = gene_list[gene_list$contrast %in% c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock"),]
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_WT.P-SETI_WT.mock" =  NULL, "SETI_WT.PE-SETI_WT.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_up = data.frame(genes = upregulated$target, ETI = upregulated_list[["SETI_WT.E-SETI_WT.mock"]], PTI = upregulated_list[["SETI_WT.P-SETI_WT.mock"]], PTI_plus_ETI = upregulated_list[["SETI_WT.PE-SETI_WT.mock"]])
upset_plot_up = upset_plot_up[!duplicated(upset_plot_up$genes),]
upset(upset_plot_up, colnames(upset_plot_up)[1:4])
var.lab3 = c(
"PTI" = "PTI",
"ETI" = "ETI",
"PTI_plus_ETI" = "PTI + ETI")[sort(1:3, decreasing = TRUE)]
vlabeller <- function (variable, value) {
return(var.lab3[value])
}
upset_up_plot = upset(upset_plot_up, colnames(upset_plot_up[,2:4]), name='Lines', width_ratio=0.1, labeller= vlabeller, sort_sets=FALSE, set_sizes=FALSE, themes=upset_default_themes(text=element_text(size=8))) + ggtitle('Intersection of upregulated DEGs')
upset_up_plot
gene_list = read.csv2("./Data/Immune_Pathways/3drnaseq/X2024.08.05.11.24.04.j284/result/Significant DE genes list and statistics.csv", sep = ",", dec = ".", header = TRUE)
gene_list = gene_list[gene_list$contrast %in% c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock"),]
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_WT.P-SETI_WT.mock" =  NULL, "SETI_WT.PE-SETI_WT.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_up = data.frame(genes = upregulated$target, ETI = upregulated_list[["SETI_WT.E-SETI_WT.mock"]], PTI = upregulated_list[["SETI_WT.P-SETI_WT.mock"]], PTI_plus_ETI = upregulated_list[["SETI_WT.PE-SETI_WT.mock"]])
upset_plot_up = upset_plot_up[!duplicated(upset_plot_up$genes),]
upset(upset_plot_up, colnames(upset_plot_up)[1:4])
var.lab3 = c(
"PTI" = "PTI",
"ETI" = "ETI",
"PTI_plus_ETI" = "PTI + ETI")[sort(1:3, decreasing = TRUE)]
vlabeller <- function (variable, value) {
return(var.lab3[value])
}
View(upset_plot_up)
gene_list = read.csv2("./Data/Immune_Pathways/3drnaseq/X2024.08.05.11.24.04.j284/result/Significant DE genes list and statistics.csv", sep = ",", dec = ".", header = TRUE)
gene_list = gene_list[gene_list$contrast %in% c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock"),]
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_WT.P-SETI_WT.mock" =  NULL, "SETI_WT.PE-SETI_WT.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_up = data.frame(genes = upregulated$target, ETI = upregulated_list[["SETI_WT.E-SETI_WT.mock"]], PTI = upregulated_list[["SETI_WT.P-SETI_WT.mock"]], PTI_plus_ETI = upregulated_list[["SETI_WT.PE-SETI_WT.mock"]])
upset_plot_up = upset_plot_up[!duplicated(upset_plot_up$genes),]
upset(upset_plot_up, colnames(upset_plot_up)[1:4])
var.lab3 = c(
"ETI" = "ETI",
"PTI" = "PTI",
"PTI_plus_ETI" = "PTI + ETI")[sort(1:3, decreasing = TRUE)]
vlabeller <- function (variable, value) {
return(var.lab3[value])
}
upset_plot_up = upset_plot_up[,c(1, sort(2:4, decreasing = TRUE))]
upset_up_plot = upset(upset_plot_up, colnames(upset_plot_up[,2:4]), name='Lines', width_ratio=0.1, labeller= vlabeller, sort_sets=FALSE, set_sizes=FALSE, themes=upset_default_themes(text=element_text(size=8))) + ggtitle('Intersection of upregulated DEGs')
# ETI specific genes
write.csv2(data.frame(Genes = upset_plot_up[upset_plot_up$ETI == 1 & upset_plot_up$PTI == 0 & upset_plot_up$PTI_plus_ETI == 0, "genes"]),
file = "ETI_Specific_Genes.csv")
pdf(file="upset_plot_up.pdf",
width = 4,
height = 3.25)
upset_up_plot
dev.off()
upset_plot_up[upset_plot_up$ETI == 1 & upset_plot_up$PTI == 0 & upset_plot_up$PTI_plus_ETI == 0, "genes"]
length(upset_plot_up[upset_plot_up$ETI == 1 & upset_plot_up$PTI == 0 & upset_plot_up$PTI_plus_ETI == 0, "genes"])
gene_list = read.csv2("./Data/Immune_Pathways/3drnaseq/X2024.08.05.11.24.04.j284/result/Significant DE genes list and statistics.csv", sep = ",", dec = ".", header = TRUE)
gene_list = gene_list[gene_list$contrast %in% c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock"),]
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_WT.P-SETI_WT.mock" =  NULL, "SETI_WT.PE-SETI_WT.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_up = data.frame(genes = upregulated$target, ETI = upregulated_list[["SETI_WT.E-SETI_WT.mock"]], PTI = upregulated_list[["SETI_WT.P-SETI_WT.mock"]], PTI_plus_ETI = upregulated_list[["SETI_WT.PE-SETI_WT.mock"]])
upset_plot_up = upset_plot_up[!duplicated(upset_plot_up$genes),]
upset(upset_plot_up, colnames(upset_plot_up)[1:4])
var.lab3 = c(
"PTI" = "PTI",
"ETI" = "ETI",
"PTI_plus_ETI" = "PTI + ETI")[sort(1:3, decreasing = TRUE)]
vlabeller <- function (variable, value) {
return(var.lab3[value])
}
upset_plot_up = upset_plot_up[,c(1, sort(2:4, decreasing = TRUE))]
upset_up_plot = upset(upset_plot_up, colnames(upset_plot_up[,2:4]), name='Lines', width_ratio=0.1, labeller= vlabeller, sort_sets=FALSE, set_sizes=FALSE, themes=upset_default_themes(text=element_text(size=8))) + ggtitle('Intersection of upregulated DEGs')
# ETI specific genes
write.csv2(data.frame(Genes = upset_plot_up[upset_plot_up$ETI == 1 & upset_plot_up$PTI == 0 & upset_plot_up$PTI_plus_ETI == 0, "genes"]),
file = "ETI_Specific_Genes.csv")
Genes = length(upset_plot_up[upset_plot_up$ETI == 1 & upset_plot_up$PTI == 0 & upset_plot_up$PTI_plus_ETI == 0, "genes"])
pdf(file="upset_plot_up.pdf",
width = 4,
height = 3.25)
upset_up_plot
dev.off()
gene_list = read.csv2("./Data/Immune_Pathways/3drnaseq/X2024.08.05.11.24.04.j284/result/Significant DE genes list and statistics.csv", sep = ",", dec = ".", header = TRUE)
gene_list = gene_list[gene_list$contrast %in% c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock"),]
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_WT.P-SETI_WT.mock" =  NULL, "SETI_WT.PE-SETI_WT.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_up = data.frame(genes = upregulated$target, ETI = upregulated_list[["SETI_WT.E-SETI_WT.mock"]], PTI = upregulated_list[["SETI_WT.P-SETI_WT.mock"]], PTI_plus_ETI = upregulated_list[["SETI_WT.PE-SETI_WT.mock"]])
upset_plot_up = upset_plot_up[!duplicated(upset_plot_up$genes),]
upset(upset_plot_up, colnames(upset_plot_up)[1:4])
var.lab3 = c(
"PTI" = "PTI",
"ETI" = "ETI",
"PTI_plus_ETI" = "PTI + ETI")[sort(1:3, decreasing = TRUE)]
vlabeller <- function (variable, value) {
return(var.lab3[value])
}
upset_plot_up = upset_plot_up[,c(1,3,2,4)]
upset_up_plot = upset(upset_plot_up, colnames(upset_plot_up[,2:4]), name='Lines', width_ratio=0.1, labeller= vlabeller, sort_sets=FALSE, set_sizes=FALSE, themes=upset_default_themes(text=element_text(size=8))) + ggtitle('Intersection of upregulated DEGs')
# ETI specific genes
write.csv2(data.frame(Genes = upset_plot_up[upset_plot_up$ETI == 1 & upset_plot_up$PTI == 0 & upset_plot_up$PTI_plus_ETI == 0, "genes"]),
file = "ETI_Specific_Genes.csv")
Genes = length(upset_plot_up[upset_plot_up$ETI == 1 & upset_plot_up$PTI == 0 & upset_plot_up$PTI_plus_ETI == 0, "genes"])
pdf(file="upset_plot_up.pdf",
width = 4,
height = 3.25)
upset_up_plot
dev.off()
length(upset_plot_up[upset_plot_up$ETI == 1 & upset_plot_up$PTI == 1 & upset_plot_up$PTI_plus_ETI == 0, "genes"])
gene_list = read.csv2("./Data/Immune_Pathways/3drnaseq/X2024.08.05.11.24.04.j284/result/Significant DE genes list and statistics.csv", sep = ",", dec = ".", header = TRUE)
gene_list = gene_list[gene_list$contrast %in% c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock"),]
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_WT.P-SETI_WT.mock" =  NULL, "SETI_WT.PE-SETI_WT.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_up = data.frame(genes = upregulated$target, ETI = upregulated_list[["SETI_WT.E-SETI_WT.mock"]], PTI = upregulated_list[["SETI_WT.P-SETI_WT.mock"]], PTI_plus_ETI = upregulated_list[["SETI_WT.PE-SETI_WT.mock"]])
upset_plot_up = upset_plot_up[!duplicated(upset_plot_up$genes),]
upset(upset_plot_up, colnames(upset_plot_up)[1:4])
var.lab3 = c(
"PTI" = "PTI",
"ETI" = "ETI",
"PTI_plus_ETI" = "PTI + ETI")[sort(1:3, decreasing = TRUE)]
vlabeller <- function (variable, value) {
return(var.lab3[value])
}
upset_plot_up = upset_plot_up[,c(1,3,2,4)]
gene_list = read.csv2("./Data/Immune_Pathways/3drnaseq/X2024.08.05.11.24.04.j284/result/Significant DE genes list and statistics.csv", sep = ",", dec = ".", header = TRUE)
gene_list = gene_list[gene_list$contrast %in% c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock"),]
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_WT.P-SETI_WT.mock" =  NULL, "SETI_WT.PE-SETI_WT.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_up = data.frame(genes = upregulated$target, ETI = upregulated_list[["SETI_WT.E-SETI_WT.mock"]], PTI = upregulated_list[["SETI_WT.P-SETI_WT.mock"]], PTI_plus_ETI = upregulated_list[["SETI_WT.PE-SETI_WT.mock"]])
upset_plot_up = upset_plot_up[!duplicated(upset_plot_up$genes),]
upset(upset_plot_up, colnames(upset_plot_up)[1:4])
var.lab3 = c(
"PTI" = "PTI",
"ETI" = "ETI",
"PTI_plus_ETI" = "PTI + ETI")
vlabeller <- function (variable, value) {
return(var.lab3[value])
}
upset_plot_up = upset_plot_up[,c(1,3,2,4)]
upset_up_plot = upset(upset_plot_up, colnames(upset_plot_up[,2:4]), name='Lines', width_ratio=0.1, labeller= vlabeller, sort_sets=FALSE, set_sizes=FALSE, themes=upset_default_themes(text=element_text(size=8))) + ggtitle('Intersection of upregulated DEGs')
# ETI specific genes
write.csv2(data.frame(Genes = upset_plot_up[upset_plot_up$ETI == 1 & upset_plot_up$PTI == 0 & upset_plot_up$PTI_plus_ETI == 0, "genes"]),
file = "ETI_Specific_Genes.csv")
Genes = length(upset_plot_up[upset_plot_up$ETI == 1 & upset_plot_up$PTI == 1 & upset_plot_up$PTI_plus_ETI == 0, "genes"])
pdf(file="upset_plot_up.pdf",
width = 4,
height = 3.25)
upset_up_plot
dev.off()
sort(1:3, decreasing = TRUE)
gene_list = read.csv2("./Data/Immune_Pathways/3drnaseq/X2024.08.05.11.24.04.j284/result/Significant DE genes list and statistics.csv", sep = ",", dec = ".", header = TRUE)
gene_list = gene_list[gene_list$contrast %in% c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock"),]
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_WT.P-SETI_WT.mock" =  NULL, "SETI_WT.PE-SETI_WT.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_up = data.frame(genes = upregulated$target, ETI = upregulated_list[["SETI_WT.E-SETI_WT.mock"]], PTI = upregulated_list[["SETI_WT.P-SETI_WT.mock"]], PTI_plus_ETI = upregulated_list[["SETI_WT.PE-SETI_WT.mock"]])
upset_plot_up = upset_plot_up[!duplicated(upset_plot_up$genes),]
upset(upset_plot_up, colnames(upset_plot_up)[1:4])
var.lab3 = c(
"PTI" = "PTI",
"ETI" = "ETI",
"PTI_plus_ETI" = "PTI + ETI")[sort(1:3, decreasing = TRUE)]
vlabeller <- function (variable, value) {
return(var.lab3[value])
}
upset_plot_up = upset_plot_up[,c(1,3,2,4)]
View(upset_plot_up)
colnames(upset_plot_up[,2:4]
)
upset_plot_reorder = function(data_list, line_treatment, line_treatment_list){
for (gene_id in data_list$target) {
for (lines in line_treatment) {
if(lines %in% data_list[data_list$target == gene_id, "contrast"]){
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],1)
}else{
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],0)
}
}
}
return(line_treatment_list)
}
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
gene_list = read.csv2("./Data/Immune_Pathways/3drnaseq/X2024.08.05.11.24.04.j284/result/Significant DE genes list and statistics.csv", sep = ",", dec = ".", header = TRUE)
gene_list = gene_list[gene_list$contrast %in% c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock"),]
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_WT.P-SETI_WT.mock" =  NULL, "SETI_WT.PE-SETI_WT.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_up = data.frame(genes = upregulated$target, ETI = upregulated_list[["SETI_WT.E-SETI_WT.mock"]], PTI = upregulated_list[["SETI_WT.P-SETI_WT.mock"]], PTI_plus_ETI = upregulated_list[["SETI_WT.PE-SETI_WT.mock"]])
upset_plot_up = upset_plot_up[!duplicated(upset_plot_up$genes),]
upset(upset_plot_up, colnames(upset_plot_up)[1:4])
var.lab3 = c(
"PTI" = "PTI",
"ETI" = "ETI",
"PTI_plus_ETI" = "PTI + ETI")[sort(1:3, decreasing = TRUE)]
vlabeller <- function (variable, value) {
return(var.lab3[value])
}
upset_plot_up = upset_plot_up[,c(1,3,2,4)]
upset_up_plot = upset(upset_plot_up, colnames(upset_plot_up[,2:4]), name='Lines', width_ratio=0.1, labeller= vlabeller, sort_sets=FALSE, set_sizes=FALSE, themes=upset_default_themes(text=element_text(size=8))) + ggtitle('Intersection of upregulated DEGs')
# ETI specific genes
write.csv2(data.frame(Genes = upset_plot_up[upset_plot_up$ETI == 1 & upset_plot_up$PTI == 0 & upset_plot_up$PTI_plus_ETI == 0, "genes"]),
file = "ETI_Specific_Genes.csv")
Genes = length(upset_plot_up[upset_plot_up$ETI == 1 & upset_plot_up$PTI == 1 & upset_plot_up$PTI_plus_ETI == 0, "genes"])
pdf(file="upset_plot_up.pdf",
width = 4,
height = 3.25)
upset_up_plot
dev.off()
length(upset_plot_up[upset_plot_up$ETI == 1 & upset_plot_up$PTI == 1 & upset_plot_up$PTI_plus_ETI == 0, "genes"])
View(upset_plot_up)
length(upset_plot_up[upset_plot_up$ETI == 1 & upset_plot_up$PTI == 1 & upset_plot_up$PTI_plus_ETI == 1, "genes"])
length(upset_plot_up[upset_plot_up$ETI == 1 & upset_plot_up$PTI == 0 & upset_plot_up$PTI_plus_ETI == 1, "genes"])
length(upset_plot_up[upset_plot_up$ETI == 0 & upset_plot_up$PTI == 1 & upset_plot_up$PTI_plus_ETI == 0, "genes"])
colnames(upset_plot_up[,2:4])
gene_list = read.csv2("./Data/Immune_Pathways/3drnaseq/X2024.08.05.11.24.04.j284/result/Significant DE genes list and statistics.csv", sep = ",", dec = ".", header = TRUE)
gene_list = gene_list[gene_list$contrast %in% c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock"),]
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_WT.P-SETI_WT.mock", "SETI_WT.PE-SETI_WT.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_WT.P-SETI_WT.mock" =  NULL, "SETI_WT.PE-SETI_WT.mock" =  NULL)
upregulated_list = upset_plot_reorder(upregulated, line_treatment, line_treatment_list)
upset_plot_up = data.frame(genes = upregulated$target, ETI = upregulated_list[["SETI_WT.E-SETI_WT.mock"]], PTI = upregulated_list[["SETI_WT.P-SETI_WT.mock"]], PTI_plus_ETI = upregulated_list[["SETI_WT.PE-SETI_WT.mock"]])
upset_plot_up = upset_plot_up[!duplicated(upset_plot_up$genes),]
upset(upset_plot_up, colnames(upset_plot_up)[1:4])
var.lab3 = c(
"PTI" = "PTI",
"ETI" = "ETI",
"PTI_plus_ETI" = "PTI + ETI")[sort(1:3, decreasing = TRUE)]
vlabeller <- function (variable, value) {
return(var.lab3[value])
}
upset_plot_up = upset_plot_up[,c(1,3,2,4)]
upset_up_plot = upset(upset_plot_up, colnames(upset_plot_up[,c(4,3,2)]), name='Lines', width_ratio=0.1, labeller= vlabeller, sort_sets=FALSE, set_sizes=FALSE, themes=upset_default_themes(text=element_text(size=8))) + ggtitle('Intersection of upregulated DEGs')
# ETI specific genes
write.csv2(data.frame(Genes = upset_plot_up[upset_plot_up$ETI == 1 & upset_plot_up$PTI == 0 & upset_plot_up$PTI_plus_ETI == 0, "genes"]),
file = "ETI_Specific_Genes.csv")
Genes = length(upset_plot_up[upset_plot_up$ETI == 0 & upset_plot_up$PTI == 1 & upset_plot_up$PTI_plus_ETI == 0, "genes"])
pdf(file="upset_plot_up.pdf",
width = 4,
height = 3.25)
upset_up_plot
dev.off()
length(upset_plot_up[upset_plot_up$ETI == 0 & upset_plot_up$PTI == 0 & upset_plot_up$PTI_plus_ETI == 1, "genes"])
upset_plot_reorder = function(data_list, line_treatment, line_treatment_list){
for (gene_id in data_list$target) {
for (lines in line_treatment) {
if(lines %in% data_list[data_list$target == gene_id, "contrast"]){
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],1)
}else{
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],0)
}
}
}
return(line_treatment_list)
}
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
gene_list = read.csv2(file = "./Data/Downregulated_ETI/Significant DE genes list and statistics.csv", sep = ",", dec = ".",
header = TRUE)
gene_list = gene_list[gene_list$contrast != "SETI_p.E-SETI_s.E" & gene_list$contrast != "SETI_p.E-SETI_WT.E"
& gene_list$contrast != "SETI_s.E-SETI_WT.E", ]
gene_list$contrast = factor(gene_list$contrast)
full_gene_list = read.csv("./Data/Downregulated_ETI/Full_geneslist_logF2.csv", sep = ";", dec = ".", header = TRUE, row.names = 1)
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_p.E-SETI_p.mock", "SETI_s.E-SETI_s.mock", "SETI_ps.E-SETI_ps.mock", "SETI_e.E-SETI_e.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_p.E-SETI_p.mock" =  NULL, "SETI_s.E-SETI_s.mock" =  NULL, "SETI_ps.E-SETI_ps.mock" =  NULL,  "SETI_e.E-SETI_e.mock" =  NULL)
downregulated_list = upset_plot_reorder(downregulated, line_treatment, line_treatment_list)
upset_plot_down = data.frame(genes = downregulated$target, SETI = downregulated_list[["SETI_WT.E-SETI_WT.mock"]], PAD4 = downregulated_list[["SETI_p.E-SETI_p.mock"]], SAG101 = downregulated_list[["SETI_s.E-SETI_s.mock"]], PAD4SAG101 = downregulated_list[["SETI_ps.E-SETI_ps.mock"]],
EDS1 = downregulated_list[["SETI_e.E-SETI_e.mock"]])
upset_plot_down = upset_plot_down[!duplicated(upset_plot_down$genes),]
write.csv2(downregulated[downregulated$contrast == "SETI_WT.E-SETI_WT.mock",], file = "SETI_downregulated")
upset(upset_plot_down, colnames(upset_plot_down)[2:6])
var.lab3 = c(
"SETI" = bquote(bold("SETI wt")),
"PAD4" = expression(bold("SETI") ~ bolditalic("pad4")),
"SAG101" = expression(bold("SETI") ~ bolditalic("sag101")),
"PAD4SAG101" = expression(bold("SETI") ~ bolditalic("pad4 sag101")),
"EDS1" = expression(bold("SETI") ~ bolditalic("eds1")))[sort(1:5, decreasing = TRUE)]
vlabeller <- function (variable, value) {
return(var.lab3[value])
}
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_p.E-SETI_p.mock", "SETI_s.E-SETI_s.mock", "SETI_ps.E-SETI_ps.mock", "SETI_e.E-SETI_e.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_p.E-SETI_p.mock" =  NULL, "SETI_s.E-SETI_s.mock" =  NULL, "SETI_ps.E-SETI_ps.mock" =  NULL,  "SETI_e.E-SETI_e.mock" =  NULL)
downregulated_list = upset_plot_reorder(downregulated, line_treatment, line_treatment_list)
upset_plot_down = data.frame(genes = downregulated$target, SETI = downregulated_list[["SETI_WT.E-SETI_WT.mock"]], PAD4 = downregulated_list[["SETI_p.E-SETI_p.mock"]], SAG101 = downregulated_list[["SETI_s.E-SETI_s.mock"]], PAD4SAG101 = downregulated_list[["SETI_ps.E-SETI_ps.mock"]],
EDS1 = downregulated_list[["SETI_e.E-SETI_e.mock"]])
upset_plot_down = upset_plot_down[!duplicated(upset_plot_down$genes),]
write.csv2(downregulated[downregulated$contrast == "SETI_WT.E-SETI_WT.mock",], file = "SETI_downregulated")
upset(upset_plot_down, colnames(upset_plot_down)[2:6])
var.lab3 = c(
"SETI" = bquote(bold("SETI wt")),
"PAD4" = expression(bold("SETI") ~ bolditalic("pad4")),
"SAG101" = expression(bold("SETI") ~ bolditalic("sag101")),
"PAD4SAG101" = expression(bold("SETI") ~ bolditalic("pad4 sag101")),
"EDS1" = expression(bold("SETI") ~ bolditalic("eds1")))[sort(1:5, decreasing = TRUE)]
vlabeller <- function (variable, value) {
return(var.lab3[value])
}
upset_plot_down = upset_plot_down[,c(1, sort(2:6, decreasing = TRUE))]
upset_up_plot = upset(upset_plot_down, colnames(upset_plot_down[,2:6]), name='Lines', width_ratio=0.1, labeller= vlabeller, sort_sets=FALSE, set_sizes=FALSE, themes=upset_default_themes(text=element_text(size=8))) + ggtitle('Intersection of downregulated DEGs')
Genes = length(upset_plot_up[upset_plot_up$ETI == 0 & upset_plot_up$PTI == 0 & upset_plot_up$PTI_plus_ETI == 1, "genes"])
View(upset_plot_down)
length(upset_plot_down[upset_plot_down$PAD4 == 0 & upset_plot_down$SAG101 == 0 & upset_plot_down$SETI == 1 & upset_plot_down$EDS1 == 0
& upset_plot_down$PAD4SAG101 == 0, "genes"])
length(upset_plot_down[upset_plot_down$PAD4 == 0 & upset_plot_down$SAG101 == 0 & upset_plot_down$SETI == 0 & upset_plot_down$EDS1 == 1
& upset_plot_down$PAD4SAG101 == 0, "genes"])
length(upset_plot_down[upset_plot_down$PAD4 == 0 & upset_plot_down$SAG101 == 0 & upset_plot_down$SETI == 0 & upset_plot_down$EDS1 == 0
& upset_plot_down$PAD4SAG101 == 1, "genes"])
length(upset_plot_down[upset_plot_down$PAD4 == 1 & upset_plot_down$SAG101 == 0 & upset_plot_down$SETI == 0 & upset_plot_down$EDS1 == 0
& upset_plot_down$PAD4SAG101 == 0, "genes"])
length(upset_plot_down[upset_plot_down$PAD4 == 0 & upset_plot_down$SAG101 == 1 & upset_plot_down$SETI == 0 & upset_plot_down$EDS1 == 0
& upset_plot_down$PAD4SAG101 == 0, "genes"])
View(downregulated)
downregulated = gene_list[gene_list$up.down == "down-regulated" & gene_list$contrast == "SETI_s.E-SETI_s.mock", ]
View(downregulated)
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_p.E-SETI_p.mock", "SETI_s.E-SETI_s.mock", "SETI_ps.E-SETI_ps.mock", "SETI_e.E-SETI_e.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_p.E-SETI_p.mock" =  NULL, "SETI_s.E-SETI_s.mock" =  NULL, "SETI_ps.E-SETI_ps.mock" =  NULL,  "SETI_e.E-SETI_e.mock" =  NULL)
downregulated_list = upset_plot_reorder(downregulated, line_treatment, line_treatment_list)
upset_plot_down = data.frame(genes = downregulated$target, SETI = downregulated_list[["SETI_WT.E-SETI_WT.mock"]], PAD4 = downregulated_list[["SETI_p.E-SETI_p.mock"]], SAG101 = downregulated_list[["SETI_s.E-SETI_s.mock"]], PAD4SAG101 = downregulated_list[["SETI_ps.E-SETI_ps.mock"]],
EDS1 = downregulated_list[["SETI_e.E-SETI_e.mock"]])
upset_plot_down = upset_plot_down[!duplicated(upset_plot_down$genes),]
write.csv2(downregulated[downregulated$contrast == "SETI_WT.E-SETI_WT.mock",], file = "SETI_downregulated")
upset(upset_plot_down, colnames(upset_plot_down)[2:6])
var.lab3 = c(
"SETI" = bquote(bold("SETI wt")),
"PAD4" = expression(bold("SETI") ~ bolditalic("pad4")),
"SAG101" = expression(bold("SETI") ~ bolditalic("sag101")),
"PAD4SAG101" = expression(bold("SETI") ~ bolditalic("pad4 sag101")),
"EDS1" = expression(bold("SETI") ~ bolditalic("eds1")))[sort(1:5, decreasing = TRUE)]
vlabeller <- function (variable, value) {
return(var.lab3[value])
}
upset_plot_down = upset_plot_down[,c(1, sort(2:6, decreasing = TRUE))]
upset_up_plot = upset(upset_plot_down, colnames(upset_plot_down[,2:6]), name='Lines', width_ratio=0.1, labeller= vlabeller, sort_sets=FALSE, set_sizes=FALSE, themes=upset_default_themes(text=element_text(size=8))) + ggtitle('Intersection of downregulated DEGs')
Genes = length(upset_plot_down[upset_plot_down$PAD4 == 0 & upset_plot_down$SAG101 == 1 & upset_plot_down$SETI == 0 & upset_plot_down$EDS1 == 0
& upset_plot_down$PAD4SAG101 == 0, "genes"])
# pdf(file="upset_plot_down.pdf",
#     width = 4,
#   height = 3.25)
# upset_up_plot
# dev.off()
upregulated = gene_list[gene_list$up.down == "up-regulated", ]
downregulated = gene_list[gene_list$up.down == "down-regulated", ]
line_treatment = c("SETI_WT.E-SETI_WT.mock", "SETI_p.E-SETI_p.mock", "SETI_s.E-SETI_s.mock", "SETI_ps.E-SETI_ps.mock", "SETI_e.E-SETI_e.mock")
line_treatment_list = list("SETI_WT.E-SETI_WT.mock" = NULL, "SETI_p.E-SETI_p.mock" =  NULL, "SETI_s.E-SETI_s.mock" =  NULL, "SETI_ps.E-SETI_ps.mock" =  NULL,  "SETI_e.E-SETI_e.mock" =  NULL)
downregulated_list = upset_plot_reorder(downregulated, line_treatment, line_treatment_list)
upset_plot_down = data.frame(genes = downregulated$target, SETI = downregulated_list[["SETI_WT.E-SETI_WT.mock"]], PAD4 = downregulated_list[["SETI_p.E-SETI_p.mock"]], SAG101 = downregulated_list[["SETI_s.E-SETI_s.mock"]], PAD4SAG101 = downregulated_list[["SETI_ps.E-SETI_ps.mock"]],
EDS1 = downregulated_list[["SETI_e.E-SETI_e.mock"]])
upset_plot_down = upset_plot_down[!duplicated(upset_plot_down$genes),]
View(upset_plot_down)

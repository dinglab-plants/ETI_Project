columns = everything(),
rows = everything(),
method = c("bin"),
bins = c(-6, -3, -0.5, 0.5, 3, 6),
quantiles = 20,
palette = colfunc(8),
domain = c(-6, 6))
colfunc = colorRampPalette(c("#5c6cfa","white", "#f5a573" ))
table_1_2 = data_color(table_1,
columns = everything(),
rows = everything(),
direction = "row",
palette = colfunc(4),
domain = c(-6, 6))
#tsave(table_1_1, "table_1_ds1.html")
table_1_2
data_color(table_1,
columns = everything(),
rows = everything(),
direction = "row",
palette = colfunc(4))
immune_pathway_full_list =  tibble(read.csv2("Immune_pathway_genes.csv")[,c(-1,-4)])
immune_pathway_full_list$contrast = factor(immune_pathway_full_list$contrast)
immune_pathway_full_list = pivot_wider(immune_pathway_full_list, names_from = contrast, names_expand = TRUE, values_from = c(log2FC))
immune_pathway_full_list = immune_pathway_full_list[,c("target", "SETI_WT.E-SETI_WT.mock",  "SETI_WT.P-SETI_WT.mock","SETI_WT.PE-SETI_WT.mock")]
names(immune_pathway_full_list) = c("Gene_ID", "PTI", "ETI", "PTI + ETI")
cngcs_id = read.csv2("./Data/Representative_Genes/CNGCs.csv")
cngc_list = cbind(cngcs_id, immune_pathway_full_list[match(cngcs_id$Gene_ID, immune_pathway_full_list$Gene_ID),])
fig_table = cngc_list[,c("Gene_ID", "PTI", "ETI", "PTI + ETI")]
fig_table = na.omit(fig_table[order(fig_table$ETI),])
table_1 = gt(fig_table, rowname_col = "Gene_ID")|>
tab_row_group(
label = "CNGCs",
rows = 1:19,
) |>
tab_stubhead(label = "Gene ID")
na.omit(fig_table)
immune_pathway_full_list =  tibble(read.csv2("Immune_pathway_genes.csv")[,c(-1,-4)])
immune_pathway_full_list$contrast = factor(immune_pathway_full_list$contrast)
immune_pathway_full_list = pivot_wider(immune_pathway_full_list, names_from = contrast, names_expand = TRUE, values_from = c(log2FC))
immune_pathway_full_list = immune_pathway_full_list[,c("target", "SETI_WT.E-SETI_WT.mock",  "SETI_WT.P-SETI_WT.mock","SETI_WT.PE-SETI_WT.mock")]
names(immune_pathway_full_list) = c("Gene_ID", "PTI", "ETI", "PTI + ETI")
cngcs_id = read.csv2("./Data/Representative_Genes/CNGCs.csv")
cngc_list = cbind(cngcs_id, immune_pathway_full_list[match(cngcs_id$Gene_ID, immune_pathway_full_list$Gene_ID),])
fig_table = cngc_list[,c("Gene_ID", "PTI", "ETI", "PTI + ETI")]
fig_table = fig_table[order(fig_table$ETI),]
fig_table = na.omit(fig_table)
table_1 = gt(fig_table, rowname_col = "Gene_ID")|>
tab_row_group(
label = "CNGCs",
rows = 1:19,
) |>
tab_stubhead(label = "Gene ID")
View(fig_table)
immune_pathway_full_list =  tibble(read.csv2("Immune_pathway_genes.csv")[,c(-1,-4)])
immune_pathway_full_list$contrast = factor(immune_pathway_full_list$contrast)
immune_pathway_full_list = pivot_wider(immune_pathway_full_list, names_from = contrast, names_expand = TRUE, values_from = c(log2FC))
immune_pathway_full_list = immune_pathway_full_list[,c("target", "SETI_WT.E-SETI_WT.mock",  "SETI_WT.P-SETI_WT.mock","SETI_WT.PE-SETI_WT.mock")]
names(immune_pathway_full_list) = c("Gene_ID", "PTI", "ETI", "PTI + ETI")
cngcs_id = read.csv2("./Data/Representative_Genes/CNGCs.csv")
cngc_list = cbind(cngcs_id, immune_pathway_full_list[match(cngcs_id$Gene_ID, immune_pathway_full_list$Gene_ID),])
fig_table = cngc_list[,c("Gene_ID", "PTI", "ETI", "PTI + ETI")]
fig_table = fig_table[order(fig_table$ETI),]
fig_table = na.omit(fig_table)
table_1 = gt(fig_table, rowname_col = "Gene_ID")|>
tab_row_group(
label = "CNGCs",
rows = fig_table$Gene_ID,
) |>
tab_stubhead(label = "Gene ID")
table_1 = tab_style(table_1,
style = cell_text(align = "center"),
locations = cells_row_groups()
)
table_1 = tab_style(table_1,
style = cell_text(align = "center"),
locations = cells_column_labels()
) |>
tab_style(
style = cell_text(align = "center"),
locations = cells_column_labels()
) |>
tab_style(
style = cell_text(align = "center"),
locations = cells_stubhead()
) |>
tab_style(
style = cell_text(align = "center"),
locations = cells_body()
) |>
tab_style(
style = cell_text(align = "center"),
locations = cells_body()
) |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_body()
) |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_stub()) |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_stub()) |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_column_labels()) |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_stubhead())  |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_row_groups())
colfunc = colorRampPalette(c("#5c6cfa", "#d5d7ed", "white", "#f5bd73", "#f5a573"))
table_1_1 = data_color(table_1,
columns = everything(),
rows = everything(),
method = c("bin"),
bins = c(-6, -3, -0.5, 0.5, 3, 6),
quantiles = 20,
palette = colfunc(8),
domain = c(-6, 6))
colfunc = colorRampPalette(c("#5c6cfa","white", "#f5a573" ))
table_1_2 = data_color(table_1,
columns = everything(),
rows = everything(),
direction = "row",
palette = colfunc(4))
#tsave(table_1_1, "table_1_ds1.html")
table_1_2
View(cngc_list)
immune_pathway_full_list =  tibble(read.csv2("Immune_pathway_genes.csv")[,c(-1,-4)])
immune_pathway_full_list$contrast = factor(immune_pathway_full_list$contrast)
immune_pathway_full_list = pivot_wider(immune_pathway_full_list, names_from = contrast, names_expand = TRUE, values_from = c(log2FC))
immune_pathway_full_list = immune_pathway_full_list[,c("target", "SETI_WT.E-SETI_WT.mock",  "SETI_WT.P-SETI_WT.mock","SETI_WT.PE-SETI_WT.mock")]
names(immune_pathway_full_list) = c("Gene_ID", "PTI", "ETI", "PTI + ETI")
cngcs_id = read.csv2("./Data/Representative_Genes/CNGCs.csv")
cngc_list = cbind(cngcs_id, immune_pathway_full_list[match(cngcs_id$Gene_ID, immune_pathway_full_list$Gene_ID),])
fig_table = cngc_list[,c("Gene_Name", "PTI", "ETI", "PTI + ETI")]
fig_table = fig_table[order(fig_table$ETI),]
fig_table = na.omit(fig_table)
table_1 = gt(fig_table, rowname_col = "Gene_ID")|>
tab_row_group(
label = "CNGCs",
rows = fig_table$Gene_ID,
) |>
tab_stubhead(label = "Gene ID")
table_1 = tab_style(table_1,
style = cell_text(align = "center"),
locations = cells_row_groups()
)
table_1 = tab_style(table_1,
style = cell_text(align = "center"),
locations = cells_column_labels()
) |>
tab_style(
style = cell_text(align = "center"),
locations = cells_column_labels()
) |>
tab_style(
style = cell_text(align = "center"),
locations = cells_stubhead()
) |>
tab_style(
style = cell_text(align = "center"),
locations = cells_body()
) |>
tab_style(
style = cell_text(align = "center"),
locations = cells_body()
) |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_body()
) |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_stub()) |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_stub()) |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_column_labels()) |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_stubhead())  |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_row_groups())
colfunc = colorRampPalette(c("#5c6cfa", "#d5d7ed", "white", "#f5bd73", "#f5a573"))
table_1_1 = data_color(table_1,
columns = everything(),
rows = everything(),
method = c("bin"),
bins = c(-6, -3, -0.5, 0.5, 3, 6),
quantiles = 20,
palette = colfunc(8),
domain = c(-6, 6))
colfunc = colorRampPalette(c("#5c6cfa","white", "#f5a573" ))
table_1_2 = data_color(table_1,
columns = everything(),
rows = everything(),
direction = "row",
palette = colfunc(4))
#tsave(table_1_1, "table_1_ds1.html")
immune_pathway_full_list =  tibble(read.csv2("Immune_pathway_genes.csv")[,c(-1,-4)])
immune_pathway_full_list$contrast = factor(immune_pathway_full_list$contrast)
immune_pathway_full_list = pivot_wider(immune_pathway_full_list, names_from = contrast, names_expand = TRUE, values_from = c(log2FC))
immune_pathway_full_list = immune_pathway_full_list[,c("target", "SETI_WT.E-SETI_WT.mock",  "SETI_WT.P-SETI_WT.mock","SETI_WT.PE-SETI_WT.mock")]
names(immune_pathway_full_list) = c("Gene_ID", "PTI", "ETI", "PTI + ETI")
cngcs_id = read.csv2("./Data/Representative_Genes/CNGCs.csv")
cngc_list = cbind(cngcs_id, immune_pathway_full_list[match(cngcs_id$Gene_ID, immune_pathway_full_list$Gene_ID),])
fig_table = cngc_list[,c("Gene_Name", "PTI", "ETI", "PTI + ETI")]
fig_table = fig_table[order(fig_table$ETI),]
fig_table = na.omit(fig_table)
table_1 = gt(fig_table, rowname_col = "Gene_ID")|>
tab_row_group(
label = "CNGCs",
rows = fig_table$Gene_Name,
) |>
tab_stubhead(label = "Gene ID")
View(fig_table)
fig_table$Gene_Name
View(fig_table)
gt(fig_table, rowname_col = "Gene_ID")|>
tab_row_group(
label = "CNGCs",
rows = fig_table$Gene_Name,
) |>
tab_stubhead(label = "Gene ID")
immune_pathway_full_list =  tibble(read.csv2("Immune_pathway_genes.csv")[,c(-1,-4)])
immune_pathway_full_list$contrast = factor(immune_pathway_full_list$contrast)
immune_pathway_full_list = pivot_wider(immune_pathway_full_list, names_from = contrast, names_expand = TRUE, values_from = c(log2FC))
immune_pathway_full_list = immune_pathway_full_list[,c("target", "SETI_WT.E-SETI_WT.mock",  "SETI_WT.P-SETI_WT.mock","SETI_WT.PE-SETI_WT.mock")]
names(immune_pathway_full_list) = c("Gene_ID", "PTI", "ETI", "PTI + ETI")
cngcs_id = read.csv2("./Data/Representative_Genes/CNGCs.csv")
cngc_list = cbind(cngcs_id, immune_pathway_full_list[match(cngcs_id$Gene_ID, immune_pathway_full_list$Gene_ID),])
fig_table = cngc_list[,c("Gene_Name", "PTI", "ETI", "PTI + ETI")]
fig_table = fig_table[order(fig_table$ETI),]
fig_table = na.omit(fig_table)
table_1 = gt(fig_table, rowname_col = "Gene_Name")|>
tab_row_group(
label = "CNGCs",
rows = fig_table$Gene_Name,
) |>
tab_stubhead(label = "Gene ID")
table_1 = tab_style(table_1,
style = cell_text(align = "center"),
locations = cells_row_groups()
)
table_1 = tab_style(table_1,
style = cell_text(align = "center"),
locations = cells_column_labels()
) |>
tab_style(
style = cell_text(align = "center"),
locations = cells_column_labels()
) |>
tab_style(
style = cell_text(align = "center"),
locations = cells_stubhead()
) |>
tab_style(
style = cell_text(align = "center"),
locations = cells_body()
) |>
tab_style(
style = cell_text(align = "center"),
locations = cells_body()
) |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_body()
) |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_stub()) |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_stub()) |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_column_labels()) |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_stubhead())  |>
tab_style(
style = cell_borders(
sides = c("top", "bottom", "left", "right"),
color = "black",
weight = px(1.5),
style = "solid"
),
locations = cells_row_groups())
colfunc = colorRampPalette(c("#5c6cfa", "#d5d7ed", "white", "#f5bd73", "#f5a573"))
table_1_1 = data_color(table_1,
columns = everything(),
rows = everything(),
method = c("bin"),
bins = c(-6, -3, -0.5, 0.5, 3, 6),
quantiles = 20,
palette = colfunc(8),
domain = c(-6, 6))
colfunc = colorRampPalette(c("#5c6cfa","white", "#f5a573" ))
table_1_2 = data_color(table_1,
columns = everything(),
rows = everything(),
direction = "row",
palette = colfunc(4))
#tsave(table_1_1, "table_1_ds1.html")
table_1_2
table_1_1
gtsave(table_1_1, "CNGC_log2F_absolute_values.html")
gtsave(table_1_2, "CNGC_log2F_comparison.html")
knitr::opts_chunk$set(echo = TRUE)
library("ComplexUpset")
library("EnhancedVolcano")
library("ggpubr")
library("stringr")
library("r2r")
library("gt")
library("ComplexUpset")
library("tibble")
library("tidyr")
upset_plot_reorder = function(data_list, line_treatment, line_treatment_list){
for (gene_id in data_list$target) {
for (lines in line_treatment) {
if(lines %in% data_list[data_list$target == gene_id, "contrast"]){
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],1)
}else{
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],0)
}
}
}
return(line_treatment_list)
}
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
load("/Users/nguyenhh/Documents/GitHub/ETI_Project/Figure_6_Revision/Data/Immune_Pathways/p_0_05/data/intermediate_data.RData")
View(intermediate_data)
intermediate_data[["DE_genes"]][["target"]]
intermediate_data[["DE_genes"]]
intermediate_data[["genes_3D_stat"]][["fit.eBayes"]][["coefficients"]]
intermediate_data[["genes_3D_stat"]][["DE.pval.list"]][["SETI_WT.ETI-SETI_WT.mock"]]
intermediate_data[["genes_3D_stat"]][["voom.object"]]
intermediate_data[["deltaPS"]]
load("/Users/nguyenhh/Documents/GitHub/ETI_Project/Figure_6_Revision/Data/Immune_Pathways/p_0_05/data/txi_genes.RData")
View(txi_genes)
intermediate_data[["trans_3D_stat"]][["DTU.pval"]][["SETI_WT.ETI-SETI_WT.mock"]]
intermediate_data[["trans_3D_stat"]][["DTU.pval"]]
knitr::opts_chunk$set(echo = TRUE)
library("ComplexUpset")
library("EnhancedVolcano")
library("ggpubr")
library("stringr")
library("r2r")
library("gt")
library("ComplexUpset")
library("tibble")
library("tidyr")
upset_plot_reorder = function(data_list, line_treatment, line_treatment_list){
for (gene_id in data_list$target) {
for (lines in line_treatment) {
if(lines %in% data_list[data_list$target == gene_id, "contrast"]){
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],1)
}else{
line_treatment_list[[lines]] = append(line_treatment_list[[lines]],0)
}
}
}
return(line_treatment_list)
}
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
# p-value
immune_pathway_full_list =  tibble(read.csv2("Immune_pathway_genes.csv")[,c(-1,-5)])
immune_pathway_full_list$contrast = factor(immune_pathway_full_list$contrast)
immune_pathway_full_list = pivot_wider(immune_pathway_full_list, names_from = contrast, names_expand = TRUE, values_from = c(adj.pval))
immune_pathway_full_list = immune_pathway_full_list[,c("target", "SETI_WT.E-SETI_WT.mock",  "SETI_WT.P-SETI_WT.mock","SETI_WT.PE-SETI_WT.mock")]
names(immune_pathway_full_list) = c("Gene_ID", "PTI", "ETI", "PTI + ETI")
cngcs_id = read.csv2("./Data/Representative_Genes/CNGCs.csv")
cngc_list = cbind(cngcs_id, immune_pathway_full_list[match(cngcs_id$Gene_ID, immune_pathway_full_list$Gene_ID),])
fig_table = cngc_list[,c("Gene_Name", "PTI", "ETI", "PTI + ETI")]
#fig_table = fig_table[order(fig_table$ETI),]
fig_table = na.omit(fig_table)
fig_table_long_p = pivot_longer(fig_table, !Gene_Name, names_to = "Treatment", values_to = "adj.pval")
dlab_theme = theme(axis.title.y = element_text(margin = margin(r = 10)), text = element_text(size=12), axis.text = element_text(size=12),
axis.text.x = element_text(margin = margin(t = 5), size = 12, colour = "black", face="italic"),
axis.text.y = element_text(color = "black"),
axis.line.x = element_blank(),
axis.ticks = element_blank(),
#axis.ticks = element_line(size = 1),
axis.title.x = element_blank(),
legend.position="bottom",
legend.text= element_text(size = 12),
#legend.title = element_text(size = 16, face = "bold"),
panel.background = element_blank(),
panel.spacing.x = unit(1, "lines"),
panel.spacing.y= unit(0,"lines"),
#panel.grid =  element_blank(),
legend.title = element_blank(),
panel.grid.minor.x =  element_blank(),
panel.grid.major.x =  element_blank(),
panel.grid.major.y =  element_blank(),
panel.grid.minor.y =  element_line(colour = "#999999"),
#panel.border = element_rect(fill = NA, color = "black", linewidth = 1),
strip.background =element_rect(fill="white"),
strip.text.x = element_text(size = 12, hjust = 0.5))
fig_table_long$Gene_Name = factor(fig_table_long$Gene_Name, level = paste("CNGC", 1:20,sep = ""))
View(fig_table)
View(immune_pathway_full_list)
View(fig_table_long_p)
View(immune_pathway_full_list)
View(fig_table_long_p)
View(fig_table)
View(cngc_list)
View(cngcs_id)
View(dlab_theme)
immune_pathway_full_list =  tibble(read.csv2("Immune_pathway_genes.csv")[,c(-1,-5)])
View(immune_pathway_full_list)
tibble(read.csv2("Immune_pathway_genes.csv")
)

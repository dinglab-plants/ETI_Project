return(line_treatment_list)
}
outersect <- function(x, y) {
sort(c(setdiff(x, y),
setdiff(y, x)))
}
gene_list = read.csv2(file = "./Data/Downregulated_ETI/Significant DE genes list and statistics.csv", sep = ",", dec = ".",
header = TRUE)
gene_list = gene_list[gene_list$contrast != "SETI_p.E-SETI_s.E" & gene_list$contrast != "SETI_p.E-SETI_WT.E"
& gene_list$contrast != "SETI_s.E-SETI_WT.E", ]
gene_list$contrast = factor(gene_list$contrast)
full_gene_list = read.csv("./Data/Downregulated_ETI/Full_geneslist_logF2.csv", sep = ";", dec = ".", header = TRUE, row.names = 1)
cluster_01 = read.csv2(file = "./Data/GO for clusters/cluster1_gProfiler_athaliana_11-12-2023_8-16-10 PM__intersections.csv", sep = ",", dec = ".",
header = TRUE)
cluster_03 = read.csv2(file = "./Data/GO for clusters/cluster3_gProfiler_athaliana_11-12-2023_8-04-39 PM__intersections.csv", sep = ",", dec = ".",
header = TRUE)
cluster_06 = read.csv2(file = "./Data/GO for clusters/cluster6_gProfiler_athaliana_11-12-2023_8-17-16 PM__intersections.csv", sep = ",", dec = ".",
header = TRUE)
cluster_09 = read.csv2(file = "./Data/GO for clusters/cluster9_gProfiler_athaliana_11-12-2023_8-44-49 PM__intersections.csv", sep = ",", dec = ".",
header = TRUE)
string_transpose = function(cluster, term){
representative = str_split_1(cluster$intersections[cluster$term_name == term], ",")
representative = setNames(representative, rep(term, length(representative)))
return(representative)
}
representative1 = str_split_1(cluster_01$intersections[cluster_01$term_name == "response to abscisic acid"], ",")
representative1 = setNames(representative1, rep("response to abscisic acid", length(representative1)))
representative2 = str_split_1(cluster_01$intersections[cluster_01$term_name == "auxin-activated signaling pathway"], ",")
representative2 = setNames(representative2, rep("auxin-activated signaling pathway", length(representative2)))
representative3 = string_transpose(cluster_03, "carbohydrate biosynthetic process")
representative4 = string_transpose(cluster_03, "regulation of plant organ morphogenesis")
representative5 = string_transpose(cluster_06, "response to auxin")
representative6 = string_transpose(cluster_06, "response to gibberellin")
representative7 = string_transpose(cluster_09, "photosynthesis")
representative8 = string_transpose(cluster_09, "leaf development")
gene_id = c(representative1, representative2, representative3, representative4, representative5, representative6, representative7, representative8)
gene_terms = c(names(representative1), names(representative2), names(representative3), names(representative4), names(representative5), names(representative6), names(representative7), names(representative8))
representative_genes = data.frame(Gene_ID = gene_id , term_name = gene_terms)
representative_genes = cbind(representative_genes, full_gene_list[match(representative_genes$Gene_ID, row.names(full_gene_list)), c("SETI_WT.E.SETI_WT.mock", "SETI_p.E.SETI_p.mock", "SETI_s.E.SETI_s.mock", "SETI_ps.E.SETI_ps.mock")])
colnames(representative_genes)[3:6] = c("SETI", "PAD4", "SAG101", "PAD4_SAG101")
fig_table = representative_genes[,c("Gene_ID", "SETI", "PAD4", "SAG101", "PAD4_SAG101")]
fig_table = fig_table[!duplicated(fig_table$Gene_ID),]
#fig_table = fig_table[((fig_table$SETI < fig_table$PAD4) & (fig_table$SAG101 < fig_table$PAD4)) |
#                        ((fig_table$SETI > fig_table$PAD4) & (fig_table$SAG101 > fig_table$PAD4)),]
fig_table = fig_table[((fig_table$SETI < fig_table$PAD4) & (fig_table$SAG101 < fig_table$PAD4)),]
fig_table$SETI = round(fig_table$SETI, 3)
fig_table$PAD4 = round(fig_table$PAD4, 3)
fig_table$SAG101 = round(fig_table$SAG101, 3)
fig_table$PAD4_SAG101 = round(fig_table$PAD4_SAG101, 3)
fig_table = fig_table[order(fig_table$PAD4),]
fig_table1 = na.omit(fig_table[fig_table$Gene_ID %in% c(representative6,representative7,representative8,representative2),])
group2 = c(representative1,representative5,representative3,representative4)[c(representative1,representative5,representative3,representative4) != "AT1G74840"]
fig_table1_1 = na.omit(fig_table[fig_table$Gene_ID %in% group2,])
table_1 = gt(fig_table1, rowname_col = "Gene_ID")|>
tab_row_group(
label = "Response to gibberellin",
rows = representative6[representative6 %in% fig_table$Gene_ID]
) |>
tab_row_group(
label = "Photosynthesis",
rows = representative7[representative7 %in% fig_table$Gene_ID]
) |>
tab_row_group(
label = "Leaf development",
rows = representative8[representative8 %in% fig_table$Gene_ID]
) |>
tab_row_group(
label = "Auxin-activated signaling pathway",
rows = representative2[representative2 %in% fig_table$Gene_ID]
) |>
tab_stubhead(label = "Gene ID")  |>
cols_label(
Gene_ID = "Gene ID",
SETI = md("SETI"),
SAG101 = md("SETI *sag101*"),
PAD4 = md("SETI *pad4*"),
PAD4_SAG101 = md("SETI *pad4 sag101*")
) |>
tab_style(
style = cell_fill(color = "#d4d2d2"),  # Set the background color to grey
locations = list(
cells_column_labels(),
cells_row_groups(),
cells_stub(),
cells_stubhead(),
cells_column_spanners()
)     # Target the row groups
)
table_1_1 = gt(fig_table1_1, rowname_col = "Gene_ID")|>
tab_row_group(
label = "Response to abscisic acid",
rows = representative1[representative1 %in% fig_table$Gene_ID],
) |>
tab_row_group(
label = "Response to auxin",
rows = representative5[(representative5 %in% fig_table$Gene_ID) & (representative5 != "AT1G74840")]
) |>
tab_row_group(
label = "Carbohydrate biosynthetic process",
rows = representative3[representative3 %in% fig_table$Gene_ID]
) |>
tab_row_group(
label = "Regulation of plant organ morphogenesis",
rows = representative4[representative4 %in% fig_table$Gene_ID]
) |>
tab_stubhead(label = "Gene ID")  |>
cols_label(
Gene_ID = "Gene ID",
SETI = md("SETI"),
SAG101 = md("SETI *sag101*"),
PAD4 = md("SETI *pad4*"),
PAD4_SAG101 = md("SETI *pad4 sag101*")
) |>
tab_style(
style = cell_fill(color = "#d4d2d2"),  # Set the background color to grey
locations = list(
cells_column_labels(),
cells_row_groups(),
cells_stub(),
cells_stubhead(),
cells_column_spanners()
)     # Target the row groups
)
table_1 = tab_style(table_1,
style = cell_text(align = "center"),
locations = list(
cells_body(),
cells_row_groups(),
cells_stub(),
cells_column_spanners()
)
)
table_1 = tab_style(table_1,
style = cell_text(align = "center", v_align = "middle"),
locations = cells_column_labels()
) |>
tab_style(
style = cell_text(align = "center", v_align = "middle"),
locations = cells_stubhead()
) |>
tab_style(
style = cell_borders(
sides = "all", # Add borders to all sides
color = "black", # Border color
weight = px(2)   # Border thickness
),
locations = list(
cells_body(),
cells_row_groups(),
cells_stub(),
cells_column_spanners(),
cells_source_notes(),
cells_footnotes(),
cells_title()
)
) |>
cols_width(
everything() ~ px(60)  # Set all columns to 100 pixels wide
) |>
tab_options(
column_labels.border.bottom.style = 'none',
column_labels.border.top.style = 'none',
row_group.border.top.style = 'none',
column_labels.vlines.color = 'black'
) %>%
tab_style(
style = cell_borders(sides = "all", color = "black", weight = px(2)),
locations = list(cells_column_labels(everything()),
cells_stubhead())
) %>%
tab_style(
style = cell_text(weight = "bold"),
locations = list(cells_column_labels(),
cells_stubhead(),
cells_row_groups(),
cells_body(columns = "Gene_ID"),
cells_stub())
) %>%
tab_style(
style = cell_text(size = px(8)),
locations = list(cells_body(), cells_column_labels(), cells_stub(), cells_stubhead(), cells_row_groups())
)
table_1_1 = tab_style(table_1_1,
style = cell_text(align = "center"),
locations = list(
cells_body(),
cells_row_groups(),
cells_stub(),
cells_column_spanners()
)
)
table_1_1 = tab_style(table_1_1,
style = cell_text(align = "center", v_align = "middle"),
locations = cells_column_labels()
) |>
tab_style(
style = cell_text(align = "center", v_align = "middle"),
locations = cells_stubhead()
) |>
tab_style(
style = cell_borders(
sides = "all", # Add borders to all sides
color = "black", # Border color
weight = px(2)   # Border thickness
),
locations = list(
cells_body(),
cells_row_groups(),
cells_stub(),
cells_column_spanners(),
cells_source_notes(),
cells_footnotes(),
cells_title()
)
) |>
cols_width(
everything() ~ px(60)  # Set all columns to 100 pixels wide
) |>
tab_options(
column_labels.border.bottom.style = 'none',
column_labels.border.top.style = 'none',
row_group.border.top.style = 'none',
column_labels.vlines.color = 'black'
) %>%
tab_style(
style = cell_borders(sides = "all", color = "black", weight = px(2)),
locations = list(cells_column_labels(everything()),
cells_stubhead())
) %>%
tab_style(
style = cell_text(weight = "bold"),
locations = list(cells_column_labels(),
cells_stubhead(),
cells_row_groups(),
cells_body(columns = "Gene_ID"),
cells_stub())
) %>%
tab_style(
style = cell_text(size = px(8)),
locations = list(cells_body(), cells_column_labels(), cells_stub(), cells_stubhead(), cells_row_groups())
) %>%
tab_options(
table.margin.right = px(20) # Adds 20px of space to the right side
)
colfunc = colorRampPalette(c("darkblue","#5c6cfa", "#d5d7ed", "white", "#f5bd73", "#f5a573", "red"))
table_1 = data_color(table_1,
columns = everything(),
rows = everything(),
method = c("bin"),
bins = c(-5, -2, -1.5,-1, -0.9, -0.8,-0.7, -0.6, -0.5, -0.4, -0.3, -0.20, 0.20, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.5, 2, 5),
palette = colfunc(23),
domain = c(-5, 5))
colfunc = colorRampPalette(c("darkblue","#5c6cfa", "#d5d7ed", "white", "#f5bd73", "#f5a573", "red"))
table_1_1 = data_color(table_1_1,
columns = everything(),
rows = everything(),
method = c("bin"),
bins = c(-5, -2, -1.5,-1, -0.9, -0.8,-0.7, -0.6, -0.5, -0.4, -0.3, -0.20, 0.20, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.5, 2, 5),
palette = colfunc(23),
domain = c(-5, 5))
my_tables = list(table_1, table_1_1)
gt_two_column_layout(my_tables)
gt_two_column_layout(my_tables, output = "save",
filename = "basic-two-col.png",
vwidth = 670, vheight = 620)
gt_two_column_layout(my_tables, output = "save",
filename = "basic-two-col2.png",
vwidth = 670, vheight = 620)
gt_two_column_layout(my_tables, output = "save",
filename = "basic-two-col2.png",
vwidth = 670, vheight = 620)
gt_two_column_layout(my_tables, output = "save",
filename = "basic-two-col2.png",
vwidth = 300, vheight = 620)
gt_two_column_layout(my_tables)
gt_two_column_layout(my_tables, output = "save",
filename = "basic-two-col2.png",
vwidth = 300, vheight = 300)
gt_two_column_layout(my_tables, output = "save",
filename = "basic-two-col2.png",
vwidth = 100, vheight = 300)
gt_two_column_layout(my_tables, output = "save",
filename = "basic-two-col2.png",
vwidth = 4000, vheight = 4000)
table_1 = gt(fig_table1, rowname_col = "Gene_ID")|>
tab_row_group(
label = "Response to gibberellin",
rows = representative6[representative6 %in% fig_table$Gene_ID]
) |>
tab_row_group(
label = "Photosynthesis",
rows = representative7[representative7 %in% fig_table$Gene_ID]
) |>
tab_row_group(
label = "Leaf development",
rows = representative8[representative8 %in% fig_table$Gene_ID]
) |>
tab_row_group(
label = "Auxin-activated signaling pathway",
rows = representative2[representative2 %in% fig_table$Gene_ID]
) |>
tab_stubhead(label = "Gene ID")  |>
cols_label(
Gene_ID = "Gene ID",
SETI = md("SETI"),
SAG101 = md("SETI *sag101*"),
PAD4 = md("SETI *pad4*"),
PAD4_SAG101 = md("SETI *pad4 sag101*")
) |>
tab_style(
style = cell_fill(color = "#d4d2d2"),  # Set the background color to grey
locations = list(
cells_column_labels(),
cells_row_groups(),
cells_stub(),
cells_stubhead(),
cells_column_spanners()
)     # Target the row groups
)
table_1_1 = gt(fig_table1_1, rowname_col = "Gene_ID")|>
tab_row_group(
label = "Response to abscisic acid",
rows = representative1[representative1 %in% fig_table$Gene_ID],
) |>
tab_row_group(
label = "Response to auxin",
rows = representative5[(representative5 %in% fig_table$Gene_ID) & (representative5 != "AT1G74840")]
) |>
tab_row_group(
label = "Carbohydrate biosynthetic process",
rows = representative3[representative3 %in% fig_table$Gene_ID]
) |>
tab_row_group(
label = "Regulation of plant organ morphogenesis",
rows = representative4[representative4 %in% fig_table$Gene_ID]
) |>
tab_stubhead(label = "Gene ID")  |>
cols_label(
Gene_ID = "Gene ID",
SETI = md("SETI"),
SAG101 = md("SETI *sag101*"),
PAD4 = md("SETI *pad4*"),
PAD4_SAG101 = md("SETI *pad4 sag101*")
) |>
tab_style(
style = cell_fill(color = "#d4d2d2"),  # Set the background color to grey
locations = list(
cells_column_labels(),
cells_row_groups(),
cells_stub(),
cells_stubhead(),
cells_column_spanners()
)     # Target the row groups
)
table_1 = tab_style(table_1,
style = cell_text(align = "center"),
locations = list(
cells_body(),
cells_row_groups(),
cells_stub(),
cells_column_spanners()
)
)
table_1 = tab_style(table_1,
style = cell_text(align = "center", v_align = "middle"),
locations = cells_column_labels()
) |>
tab_style(
style = cell_text(align = "center", v_align = "middle"),
locations = cells_stubhead()
) |>
tab_style(
style = cell_borders(
sides = "all", # Add borders to all sides
color = "black", # Border color
weight = px(2)   # Border thickness
),
locations = list(
cells_body(),
cells_row_groups(),
cells_stub(),
cells_column_spanners(),
cells_source_notes(),
cells_footnotes(),
cells_title()
)
) |>
cols_width(
everything() ~ px(60)  # Set all columns to 100 pixels wide
) |>
tab_options(
column_labels.border.bottom.style = 'none',
column_labels.border.top.style = 'none',
row_group.border.top.style = 'none',
column_labels.vlines.color = 'black'
) %>%
tab_style(
style = cell_borders(sides = "all", color = "black", weight = px(2)),
locations = list(cells_column_labels(everything()),
cells_stubhead())
) %>%
tab_style(
style = cell_text(weight = "bold"),
locations = list(cells_column_labels(),
cells_stubhead(),
cells_row_groups(),
cells_body(columns = "Gene_ID"),
cells_stub())
) %>%
tab_style(
style = cell_text(size = px(8)),
locations = list(cells_body(), cells_column_labels(), cells_stub(), cells_stubhead(), cells_row_groups())
)
table_1_1 = tab_style(table_1_1,
style = cell_text(align = "center"),
locations = list(
cells_body(),
cells_row_groups(),
cells_stub(),
cells_column_spanners()
)
)
table_1_1 = tab_style(table_1_1,
style = cell_text(align = "center", v_align = "middle"),
locations = cells_column_labels()
) |>
tab_style(
style = cell_text(align = "center", v_align = "middle"),
locations = cells_stubhead()
) |>
tab_style(
style = cell_borders(
sides = "all", # Add borders to all sides
color = "black", # Border color
weight = px(2)   # Border thickness
),
locations = list(
cells_body(),
cells_row_groups(),
cells_stub(),
cells_column_spanners(),
cells_source_notes(),
cells_footnotes(),
cells_title()
)
) |>
cols_width(
everything() ~ px(60)  # Set all columns to 100 pixels wide
) |>
tab_options(
column_labels.border.bottom.style = 'none',
column_labels.border.top.style = 'none',
row_group.border.top.style = 'none',
column_labels.vlines.color = 'black'
) %>%
tab_style(
style = cell_borders(sides = "all", color = "black", weight = px(2)),
locations = list(cells_column_labels(everything()),
cells_stubhead())
) %>%
tab_style(
style = cell_text(weight = "bold"),
locations = list(cells_column_labels(),
cells_stubhead(),
cells_row_groups(),
cells_body(columns = "Gene_ID"),
cells_stub())
) %>%
tab_style(
style = cell_text(size = px(8)),
locations = list(cells_body(), cells_column_labels(), cells_stub(), cells_stubhead(), cells_row_groups())
) %>%
tab_options(
table.margin.right = px(20) # Adds 20px of space to the right side
)
colfunc = colorRampPalette(c("darkblue","#5c6cfa", "#d5d7ed", "white", "#f5bd73", "#f5a573", "red"))
table_1 = data_color(table_1,
columns = everything(),
rows = everything(),
method = c("bin"),
bins = c(-5, -2, -1.5,-1, -0.9, -0.8,-0.7, -0.6, -0.5, -0.4, -0.3, -0.20, 0.20, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.5, 2, 5),
palette = colfunc(23),
domain = c(-5, 5))
colfunc = colorRampPalette(c("darkblue","#5c6cfa", "#d5d7ed", "white", "#f5bd73", "#f5a573", "red"))
table_1_1 = data_color(table_1_1,
columns = everything(),
rows = everything(),
method = c("bin"),
bins = c(-5, -2, -1.5,-1, -0.9, -0.8,-0.7, -0.6, -0.5, -0.4, -0.3, -0.20, 0.20, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.5, 2, 5),
palette = colfunc(23),
domain = c(-5, 5))
my_tables = list(table_1, table_1_1)
gt_two_column_layout(my_tables)
gt_two_column_layout(my_tables, output = "save",
filename = "basic-two-col2.png",
vwidth = 4000, vheight = 4000)
# colfunc = colorRampPalette(c("#5c6cfa","#d5d7ed", "#f5bd73", "#f5a573" ))
# table_1_2 = data_color(table_1,
#   columns = everything(),
#   rows = everything(),
#   method = c("numeric"),
#   bins = 4,
#   quantiles = 20,
#   direction = "row",
#   palette = colfunc(4))
#gtsave(table_1_2, "table_1_2.html")
gt_two_column_layout(my_tables, output = "save",
filename = "basic-two-col2.png",
vwidth = 1920, vheight = 1080)
gt_two_column_layout(my_tables, output = "save",
filename = "basic-two-col2.png")
gt_two_column_layout(my_tables)
